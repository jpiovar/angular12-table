{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/projects/custom/angular11_12_table/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _createClass from \"C:/projects/custom/angular11_12_table/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/projects/custom/angular11_12_table/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/projects/custom/angular11_12_table/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:/projects/custom/angular11_12_table/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, Inject, ContentChildren, ContentChild, Input, forwardRef, ViewChild, EventEmitter, Attribute, Output, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager, FocusMonitor } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatList.\n\n/** @docs-private */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nvar _c0 = [\"*\"];\nvar _c1 = \".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\";\nvar _c2 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nvar _c3 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nvar _c4 = [\"text\"];\n\nfunction MatListOption_mat_pseudo_checkbox_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n  }\n}\n\nvar _c5 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nvar _c6 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\n\nvar _MatListBase = mixinDisabled(mixinDisableRipple( /*#__PURE__*/function () {\n  function _class() {\n    _classCallCheck(this, _class);\n  }\n\n  return _class;\n}())); // Boilerplate for applying mixins to MatListItem.\n\n/** @docs-private */\n\n\nvar _MatListItemMixinBase = mixinDisableRipple( /*#__PURE__*/function () {\n  function _class2() {\n    _classCallCheck(this, _class2);\n  }\n\n  return _class2;\n}());\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\n\n\nvar MAT_LIST = new InjectionToken('MatList');\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\n\nvar MAT_NAV_LIST = new InjectionToken('MatNavList');\n\nvar MatNavList = /*#__PURE__*/function (_MatListBase2) {\n  _inherits(MatNavList, _MatListBase2);\n\n  var _super = _createSuper(MatNavList);\n\n  function MatNavList() {\n    var _this;\n\n    _classCallCheck(this, MatNavList);\n\n    _this = _super.apply(this, arguments);\n    /** Emits when the state of the list changes. */\n\n    _this._stateChanges = new Subject();\n    return _this;\n  }\n\n  _createClass(MatNavList, [{\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this._stateChanges.next();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n  }]);\n\n  return MatNavList;\n}(_MatListBase);\n\nMatNavList.ɵfac = /*@__PURE__*/function () {\n  var ɵMatNavList_BaseFactory;\n  return function MatNavList_Factory(t) {\n    return (ɵMatNavList_BaseFactory || (ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList)))(t || MatNavList);\n  };\n}();\n\nMatNavList.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatNavList,\n  selectors: [[\"mat-nav-list\"]],\n  hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"],\n  inputs: {\n    disableRipple: \"disableRipple\",\n    disabled: \"disabled\"\n  },\n  exportAs: [\"matNavList\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_NAV_LIST,\n    useExisting: MatNavList\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatNavList_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  styles: [_c1],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n    type: Component,\n    args: [{\n      selector: 'mat-nav-list',\n      exportAs: 'matNavList',\n      host: {\n        'role': 'navigation',\n        'class': 'mat-nav-list mat-list-base'\n      },\n      template: \"<ng-content></ng-content>\\n\\n\",\n      inputs: ['disableRipple', 'disabled'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: MAT_NAV_LIST,\n        useExisting: MatNavList\n      }],\n      styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n    }]\n  }], null, null);\n})();\n\nvar MatList = /*#__PURE__*/function (_MatListBase3) {\n  _inherits(MatList, _MatListBase3);\n\n  var _super2 = _createSuper(MatList);\n\n  function MatList(_elementRef) {\n    var _this2;\n\n    _classCallCheck(this, MatList);\n\n    _this2 = _super2.call(this);\n    _this2._elementRef = _elementRef;\n    /** Emits when the state of the list changes. */\n\n    _this2._stateChanges = new Subject();\n\n    if (_this2._getListType() === 'action-list') {\n      _elementRef.nativeElement.classList.add('mat-action-list');\n    }\n\n    return _this2;\n  }\n\n  _createClass(MatList, [{\n    key: \"_getListType\",\n    value: function _getListType() {\n      var nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n\n      if (nodeName === 'mat-list') {\n        return 'list';\n      }\n\n      if (nodeName === 'mat-action-list') {\n        return 'action-list';\n      }\n\n      return null;\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      this._stateChanges.next();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n  }]);\n\n  return MatList;\n}(_MatListBase);\n\nMatList.ɵfac = function MatList_Factory(t) {\n  return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nMatList.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatList,\n  selectors: [[\"mat-list\"], [\"mat-action-list\"]],\n  hostAttrs: [1, \"mat-list\", \"mat-list-base\"],\n  inputs: {\n    disableRipple: \"disableRipple\",\n    disabled: \"disabled\"\n  },\n  exportAs: [\"matList\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_LIST,\n    useExisting: MatList\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatList_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  styles: [_c1],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatList.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatList, [{\n    type: Component,\n    args: [{\n      selector: 'mat-list, mat-action-list',\n      exportAs: 'matList',\n      template: \"<ng-content></ng-content>\\n\\n\",\n      host: {\n        'class': 'mat-list mat-list-base'\n      },\n      inputs: ['disableRipple', 'disabled'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: MAT_LIST,\n        useExisting: MatList\n      }],\n      styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n\n\nvar MatListAvatarCssMatStyler = function MatListAvatarCssMatStyler() {\n  _classCallCheck(this, MatListAvatarCssMatStyler);\n};\n\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) {\n  return new (t || MatListAvatarCssMatStyler)();\n};\n\nMatListAvatarCssMatStyler.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatListAvatarCssMatStyler,\n  selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]],\n  hostAttrs: [1, \"mat-list-avatar\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-list-avatar], [matListAvatar]',\n      host: {\n        'class': 'mat-list-avatar'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n\n\nvar MatListIconCssMatStyler = function MatListIconCssMatStyler() {\n  _classCallCheck(this, MatListIconCssMatStyler);\n};\n\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) {\n  return new (t || MatListIconCssMatStyler)();\n};\n\nMatListIconCssMatStyler.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatListIconCssMatStyler,\n  selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]],\n  hostAttrs: [1, \"mat-list-icon\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-list-icon], [matListIcon]',\n      host: {\n        'class': 'mat-list-icon'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\n\n\nvar MatListSubheaderCssMatStyler = function MatListSubheaderCssMatStyler() {\n  _classCallCheck(this, MatListSubheaderCssMatStyler);\n};\n\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) {\n  return new (t || MatListSubheaderCssMatStyler)();\n};\n\nMatListSubheaderCssMatStyler.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatListSubheaderCssMatStyler,\n  selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]],\n  hostAttrs: [1, \"mat-subheader\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-subheader], [matSubheader]',\n      host: {\n        'class': 'mat-subheader'\n      }\n    }]\n  }], null, null);\n})();\n/** An item within a Material Design list. */\n\n\nvar MatListItem = /*#__PURE__*/function (_MatListItemMixinBase2) {\n  _inherits(MatListItem, _MatListItemMixinBase2);\n\n  var _super3 = _createSuper(MatListItem);\n\n  function MatListItem(_element, _changeDetectorRef, navList, list) {\n    var _this3;\n\n    _classCallCheck(this, MatListItem);\n\n    _this3 = _super3.call(this);\n    _this3._element = _element;\n    _this3._isInteractiveList = false;\n    _this3._destroyed = new Subject();\n    _this3._disabled = false;\n    _this3._isInteractiveList = !!(navList || list && list._getListType() === 'action-list');\n    _this3._list = navList || list; // If no type attribute is specified for <button>, set it to \"button\".\n    // If a type attribute is already specified, do nothing.\n\n    var element = _this3._getHostElement();\n\n    if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n      element.setAttribute('type', 'button');\n    }\n\n    if (_this3._list) {\n      // React to changes in the state of the parent list since\n      // some of the item's properties depend on it (e.g. `disableRipple`).\n      _this3._list._stateChanges.pipe(takeUntil(_this3._destroyed)).subscribe(function () {\n        _changeDetectorRef.markForCheck();\n      });\n    }\n\n    return _this3;\n  }\n  /** Whether the option is disabled. */\n\n\n  _createClass(MatListItem, [{\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled || !!(this._list && this._list.disabled);\n    },\n    set: function set(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      setLines(this._lines, this._element);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._destroyed.next();\n\n      this._destroyed.complete();\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n\n  }, {\n    key: \"_isRippleDisabled\",\n    value: function _isRippleDisabled() {\n      return !this._isInteractiveList || this.disableRipple || !!(this._list && this._list.disableRipple);\n    }\n    /** Retrieves the DOM element of the component host. */\n\n  }, {\n    key: \"_getHostElement\",\n    value: function _getHostElement() {\n      return this._element.nativeElement;\n    }\n  }]);\n\n  return MatListItem;\n}(_MatListItemMixinBase);\n\nMatListItem.ɵfac = function MatListItem_Factory(t) {\n  return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_NAV_LIST, 8), ɵngcc0.ɵɵdirectiveInject(MAT_LIST, 8));\n};\n\nMatListItem.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatListItem,\n  selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]],\n  contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    }\n  },\n  hostAttrs: [1, \"mat-list-item\", \"mat-focus-indicator\"],\n  hostVars: 6,\n  hostBindings: function MatListItem_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    }\n  },\n  inputs: {\n    disableRipple: \"disableRipple\",\n    disabled: \"disabled\"\n  },\n  exportAs: [\"matListItem\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c3,\n  decls: 6,\n  vars: 2,\n  consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]],\n  template: function MatListItem_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c2);\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelement(1, \"div\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n      ɵngcc0.ɵɵprojection(4, 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(5, 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    }\n  },\n  directives: [ɵngcc1.MatRipple],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatListItem.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: MatNavList,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_NAV_LIST]\n    }]\n  }, {\n    type: MatList,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [MAT_LIST]\n    }]\n  }];\n};\n\nMatListItem.propDecorators = {\n  _lines: [{\n    type: ContentChildren,\n    args: [MatLine, {\n      descendants: true\n    }]\n  }],\n  _avatar: [{\n    type: ContentChild,\n    args: [MatListAvatarCssMatStyler]\n  }],\n  _icon: [{\n    type: ContentChild,\n    args: [MatListIconCssMatStyler]\n  }],\n  disabled: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n    type: Component,\n    args: [{\n      selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n      exportAs: 'matListItem',\n      host: {\n        'class': 'mat-list-item mat-focus-indicator',\n        '[class.mat-list-item-disabled]': 'disabled',\n        // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n        '[class.mat-list-item-avatar]': '_avatar || _icon',\n        '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n      },\n      inputs: ['disableRipple'],\n      template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: MatNavList,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_NAV_LIST]\n      }]\n    }, {\n      type: MatList,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_LIST]\n      }]\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    _lines: [{\n      type: ContentChildren,\n      args: [MatLine, {\n        descendants: true\n      }]\n    }],\n    _avatar: [{\n      type: ContentChild,\n      args: [MatListAvatarCssMatStyler]\n    }],\n    _icon: [{\n      type: ContentChild,\n      args: [MatListIconCssMatStyler]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar _MatSelectionListBase = mixinDisableRipple( /*#__PURE__*/function () {\n  function _class3() {\n    _classCallCheck(this, _class3);\n  }\n\n  return _class3;\n}());\n\nvar _MatListOptionBase = mixinDisableRipple( /*#__PURE__*/function () {\n  function _class4() {\n    _classCallCheck(this, _class4);\n  }\n\n  return _class4;\n}());\n/** @docs-private */\n\n\nvar MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return MatSelectionList;\n  }),\n  multi: true\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\n\nvar MatSelectionListChange = function MatSelectionListChange(\n/** Reference to the selection list that emitted the event. */\nsource,\n/**\n * Reference to the option that has been changed.\n * @deprecated Use `options` instead, because some events may change more than one option.\n * @breaking-change 12.0.0\n */\noption,\n/** Reference to the options that have been changed. */\noptions) {\n  _classCallCheck(this, MatSelectionListChange);\n\n  this.source = source;\n  this.option = option;\n  this.options = options;\n};\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n\n\nvar MatListOption = /*#__PURE__*/function (_MatListOptionBase2) {\n  _inherits(MatListOption, _MatListOptionBase2);\n\n  var _super4 = _createSuper(MatListOption);\n\n  function MatListOption(_element, _changeDetector,\n  /** @docs-private */\n  selectionList) {\n    var _this4;\n\n    _classCallCheck(this, MatListOption);\n\n    _this4 = _super4.call(this);\n    _this4._element = _element;\n    _this4._changeDetector = _changeDetector;\n    _this4.selectionList = selectionList;\n    _this4._selected = false;\n    _this4._disabled = false;\n    _this4._hasFocus = false;\n    /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\n\n    _this4.checkboxPosition = 'after';\n    /**\n     * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n     * in the first cycle.\n     */\n\n    _this4._inputsInitialized = false;\n    return _this4;\n  }\n  /** Theme color of the list option. This sets the color of the checkbox. */\n\n\n  _createClass(MatListOption, [{\n    key: \"color\",\n    get: function get() {\n      return this._color || this.selectionList.color;\n    },\n    set: function set(newValue) {\n      this._color = newValue;\n    }\n    /** Value of the option */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set: function set(newValue) {\n      if (this.selected && !this.selectionList.compareWith(newValue, this.value) && this._inputsInitialized) {\n        this.selected = false;\n      }\n\n      this._value = newValue;\n    }\n    /** Whether the option is disabled. */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled || this.selectionList && this.selectionList.disabled;\n    },\n    set: function set(value) {\n      var newValue = coerceBooleanProperty(value);\n\n      if (newValue !== this._disabled) {\n        this._disabled = newValue;\n\n        this._changeDetector.markForCheck();\n      }\n    }\n    /** Whether the option is selected. */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this.selectionList.selectedOptions.isSelected(this);\n    },\n    set: function set(value) {\n      var isSelected = coerceBooleanProperty(value);\n\n      if (isSelected !== this._selected) {\n        this._setSelected(isSelected);\n\n        if (isSelected || this.selectionList.multiple) {\n          this.selectionList._reportValueChange();\n        }\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this5 = this;\n\n      var list = this.selectionList;\n\n      if (list._value && list._value.some(function (value) {\n        return list.compareWith(value, _this5._value);\n      })) {\n        this._setSelected(true);\n      }\n\n      var wasSelected = this._selected; // List options that are selected at initialization can't be reported properly to the form\n      // control. This is because it takes some time until the selection-list knows about all\n      // available options. Also it can happen that the ControlValueAccessor has an initial value\n      // that should be used instead. Deferring the value change report to the next tick ensures\n      // that the form control value is not being overwritten.\n\n      Promise.resolve().then(function () {\n        if (_this5._selected || wasSelected) {\n          _this5.selected = true;\n\n          _this5._changeDetector.markForCheck();\n        }\n      });\n      this._inputsInitialized = true;\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      setLines(this._lines, this._element);\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      var _this6 = this;\n\n      if (this.selected) {\n        // We have to delay this until the next tick in order\n        // to avoid changed after checked errors.\n        Promise.resolve().then(function () {\n          _this6.selected = false;\n        });\n      }\n\n      var hadFocus = this._hasFocus;\n\n      var newActiveItem = this.selectionList._removeOptionFromList(this); // Only move focus if this option was focused at the time it was destroyed.\n\n\n      if (hadFocus && newActiveItem) {\n        newActiveItem.focus();\n      }\n    }\n    /** Toggles the selection state of the option. */\n\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      return this._text ? this._text.nativeElement.textContent || '' : '';\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n\n  }, {\n    key: \"_isRippleDisabled\",\n    value: function _isRippleDisabled() {\n      return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n  }, {\n    key: \"_handleClick\",\n    value: function _handleClick() {\n      if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n        this.toggle(); // Emit a change event if the selected state of the option changed through user interaction.\n\n        this.selectionList._emitChangeEvent([this]);\n      }\n    }\n  }, {\n    key: \"_handleFocus\",\n    value: function _handleFocus() {\n      this.selectionList._setFocusedOption(this);\n\n      this._hasFocus = true;\n    }\n  }, {\n    key: \"_handleBlur\",\n    value: function _handleBlur() {\n      this.selectionList._onTouched();\n\n      this._hasFocus = false;\n    }\n    /** Retrieves the DOM element of the component host. */\n\n  }, {\n    key: \"_getHostElement\",\n    value: function _getHostElement() {\n      return this._element.nativeElement;\n    }\n    /** Sets the selected state of the option. Returns whether the value has changed. */\n\n  }, {\n    key: \"_setSelected\",\n    value: function _setSelected(selected) {\n      if (selected === this._selected) {\n        return false;\n      }\n\n      this._selected = selected;\n\n      if (selected) {\n        this.selectionList.selectedOptions.select(this);\n      } else {\n        this.selectionList.selectedOptions.deselect(this);\n      }\n\n      this._changeDetector.markForCheck();\n\n      return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     */\n\n  }, {\n    key: \"_markForCheck\",\n    value: function _markForCheck() {\n      this._changeDetector.markForCheck();\n    }\n  }]);\n\n  return MatListOption;\n}(_MatListOptionBase);\n\nMatListOption.ɵfac = function MatListOption_Factory(t) {\n  return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return MatSelectionList;\n  })));\n};\n\nMatListOption.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatListOption,\n  selectors: [[\"mat-list-option\"]],\n  contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    }\n  },\n  viewQuery: function MatListOption_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c4, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    }\n  },\n  hostAttrs: [\"role\", \"option\", 1, \"mat-list-item\", \"mat-list-option\", \"mat-focus-indicator\"],\n  hostVars: 15,\n  hostBindings: function MatListOption_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() {\n        return ctx._handleFocus();\n      })(\"blur\", function MatListOption_blur_HostBindingHandler() {\n        return ctx._handleBlur();\n      })(\"click\", function MatListOption_click_HostBindingHandler() {\n        return ctx._handleClick();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled)(\"tabindex\", -1);\n      ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-list-single-selected-option\", ctx.selected && !ctx.selectionList.multiple);\n    }\n  },\n  inputs: {\n    disableRipple: \"disableRipple\",\n    checkboxPosition: \"checkboxPosition\",\n    color: \"color\",\n    value: \"value\",\n    selected: \"selected\",\n    disabled: \"disabled\"\n  },\n  exportAs: [\"matListOption\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c6,\n  decls: 7,\n  vars: 5,\n  consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-list-text\"], [\"text\", \"\"], [3, \"state\", \"disabled\"]],\n  template: function MatListOption_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c5);\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelement(1, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, MatListOption_mat_pseudo_checkbox_2_Template, 1, 2, \"mat-pseudo-checkbox\", 2);\n      ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n      ɵngcc0.ɵɵprojection(5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵprojection(6, 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionList.multiple);\n    }\n  },\n  directives: [ɵngcc1.MatRipple, ɵngcc2.NgIf, ɵngcc1.MatPseudoCheckbox],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatListOption.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: MatSelectionList,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return MatSelectionList;\n      })]\n    }]\n  }];\n};\n\nMatListOption.propDecorators = {\n  _avatar: [{\n    type: ContentChild,\n    args: [MatListAvatarCssMatStyler]\n  }],\n  _icon: [{\n    type: ContentChild,\n    args: [MatListIconCssMatStyler]\n  }],\n  _lines: [{\n    type: ContentChildren,\n    args: [MatLine, {\n      descendants: true\n    }]\n  }],\n  _text: [{\n    type: ViewChild,\n    args: ['text']\n  }],\n  checkboxPosition: [{\n    type: Input\n  }],\n  color: [{\n    type: Input\n  }],\n  value: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-list-option',\n      exportAs: 'matListOption',\n      inputs: ['disableRipple'],\n      host: {\n        'role': 'option',\n        'class': 'mat-list-item mat-list-option mat-focus-indicator',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()',\n        '[class.mat-list-item-disabled]': 'disabled',\n        '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n        // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n        // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n        // its theme.\n        '[class.mat-primary]': 'color === \"primary\"',\n        // Even though accent is the default, we need to set this class anyway, because the  list might\n        // be placed inside a parent that has one of the other colors with a higher specificity.\n        '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n        '[class.mat-warn]': 'color === \"warn\"',\n        '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n        '[attr.aria-selected]': 'selected',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.tabindex]': '-1'\n      },\n      template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: MatSelectionList,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return MatSelectionList;\n        })]\n      }]\n    }];\n  }, {\n    checkboxPosition: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    _avatar: [{\n      type: ContentChild,\n      args: [MatListAvatarCssMatStyler]\n    }],\n    _icon: [{\n      type: ContentChild,\n      args: [MatListIconCssMatStyler]\n    }],\n    _lines: [{\n      type: ContentChildren,\n      args: [MatLine, {\n        descendants: true\n      }]\n    }],\n    _text: [{\n      type: ViewChild,\n      args: ['text']\n    }]\n  });\n})();\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\n\n\nvar MatSelectionList = /*#__PURE__*/function (_MatSelectionListBase2) {\n  _inherits(MatSelectionList, _MatSelectionListBase2);\n\n  var _super5 = _createSuper(MatSelectionList);\n\n  function MatSelectionList(_element, // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n  tabIndex, _changeDetector, // @breaking-change 11.0.0 `_focusMonitor` parameter to become required.\n  _focusMonitor) {\n    var _this7;\n\n    _classCallCheck(this, MatSelectionList);\n\n    _this7 = _super5.call(this);\n    _this7._element = _element;\n    _this7._changeDetector = _changeDetector;\n    _this7._focusMonitor = _focusMonitor;\n    _this7._multiple = true;\n    _this7._contentInitialized = false;\n    /** Emits a change event whenever the selected state of an option changes. */\n\n    _this7.selectionChange = new EventEmitter();\n    /**\n     * Tabindex of the selection list.\n     * @breaking-change 11.0.0 Remove `tabIndex` input.\n     */\n\n    _this7.tabIndex = 0;\n    /** Theme color of the selection list. This sets the checkbox color for all list options. */\n\n    _this7.color = 'accent';\n    /**\n     * Function used for comparing an option against the selected value when determining which\n     * options should appear as selected. The first argument is the value of an options. The second\n     * one is a value from the selected value. A boolean must be returned.\n     */\n\n    _this7.compareWith = function (a1, a2) {\n      return a1 === a2;\n    };\n\n    _this7._disabled = false;\n    /** The currently selected options. */\n\n    _this7.selectedOptions = new SelectionModel(_this7._multiple);\n    /** The tabindex of the selection list. */\n\n    _this7._tabIndex = -1;\n    /** View to model callback that should be called whenever the selected options change. */\n\n    _this7._onChange = function (_) {};\n    /** Emits when the list has been destroyed. */\n\n\n    _this7._destroyed = new Subject();\n    /** View to model callback that should be called if the list or its options lost focus. */\n\n    _this7._onTouched = function () {};\n\n    return _this7;\n  }\n  /** Whether the selection list is disabled. */\n\n\n  _createClass(MatSelectionList, [{\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    },\n    set: function set(value) {\n      this._disabled = coerceBooleanProperty(value); // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n      // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n      // changed its state. Since we know that a change to `disabled` property of the list affects\n      // the state of the options, we manually mark each option for check.\n\n      this._markOptionsForCheck();\n    }\n    /** Whether selection is limited to one or multiple items (default multiple). */\n\n  }, {\n    key: \"multiple\",\n    get: function get() {\n      return this._multiple;\n    },\n    set: function set(value) {\n      var newValue = coerceBooleanProperty(value);\n\n      if (newValue !== this._multiple) {\n        if (this._contentInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n        }\n\n        this._multiple = newValue;\n        this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n      }\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this8 = this;\n\n      var _a;\n\n      this._contentInitialized = true;\n      this._keyManager = new FocusKeyManager(this.options).withWrap().withTypeAhead().withHomeAndEnd() // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n      // screenreader users, that allows reading the different options of the list.\n      .skipPredicate(function () {\n        return false;\n      }).withAllowedModifierKeys(['shiftKey']);\n\n      if (this._value) {\n        this._setOptionsFromValues(this._value);\n      } // If the user attempts to tab out of the selection list, allow focus to escape.\n\n\n      this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(function () {\n        _this8._allowFocusEscape();\n      }); // When the number of options change, update the tabindex of the selection list.\n\n\n      this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(function () {\n        _this8._updateTabIndex();\n      }); // Sync external changes to the model back to the options.\n\n      this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(function (event) {\n        if (event.added) {\n          var _iterator = _createForOfIteratorHelper(event.added),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var item = _step.value;\n              item.selected = true;\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n\n        if (event.removed) {\n          var _iterator2 = _createForOfIteratorHelper(event.removed),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _item = _step2.value;\n              _item.selected = false;\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      }); // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n\n      (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.monitor(this._element).pipe(takeUntil(this._destroyed)).subscribe(function (origin) {\n        var _a;\n\n        if (origin === 'keyboard' || origin === 'program') {\n          var toFocus = 0;\n\n          for (var i = 0; i < _this8.options.length; i++) {\n            if ((_a = _this8.options.get(i)) === null || _a === void 0 ? void 0 : _a.selected) {\n              toFocus = i;\n              break;\n            }\n          }\n\n          _this8._keyManager.setActiveItem(toFocus);\n        }\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      var disableRippleChanges = changes['disableRipple'];\n      var colorChanges = changes['color'];\n\n      if (disableRippleChanges && !disableRippleChanges.firstChange || colorChanges && !colorChanges.firstChange) {\n        this._markOptionsForCheck();\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      var _a; // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n\n\n      (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.stopMonitoring(this._element);\n\n      this._destroyed.next();\n\n      this._destroyed.complete();\n\n      this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n\n  }, {\n    key: \"focus\",\n    value: function focus(options) {\n      this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. Returns the options that changed as a result. */\n\n  }, {\n    key: \"selectAll\",\n    value: function selectAll() {\n      return this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. Returns the options that changed as a result. */\n\n  }, {\n    key: \"deselectAll\",\n    value: function deselectAll() {\n      return this._setAllOptionsSelected(false);\n    }\n    /** Sets the focused option of the selection-list. */\n\n  }, {\n    key: \"_setFocusedOption\",\n    value: function _setFocusedOption(option) {\n      this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @returns Currently-active item.\n     */\n\n  }, {\n    key: \"_removeOptionFromList\",\n    value: function _removeOptionFromList(option) {\n      var optionIndex = this._getOptionIndex(option);\n\n      if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n        // Check whether the option is the last item\n        if (optionIndex > 0) {\n          this._keyManager.updateActiveItem(optionIndex - 1);\n        } else if (optionIndex === 0 && this.options.length > 1) {\n          this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n        }\n      }\n\n      return this._keyManager.activeItem;\n    }\n    /** Passes relevant key presses to our key manager. */\n\n  }, {\n    key: \"_keydown\",\n    value: function _keydown(event) {\n      var keyCode = event.keyCode;\n      var manager = this._keyManager;\n      var previousFocusIndex = manager.activeItemIndex;\n      var hasModifier = hasModifierKey(event);\n\n      switch (keyCode) {\n        case SPACE:\n        case ENTER:\n          if (!hasModifier && !manager.isTyping()) {\n            this._toggleFocusedOption(); // Always prevent space from scrolling the page since the list has focus\n\n\n            event.preventDefault();\n          }\n\n          break;\n\n        default:\n          // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n          if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') && !manager.isTyping()) {\n            var shouldSelect = this.options.some(function (option) {\n              return !option.disabled && !option.selected;\n            });\n\n            this._setAllOptionsSelected(shouldSelect, true, true);\n\n            event.preventDefault();\n          } else {\n            manager.onKeydown(event);\n          }\n\n      }\n\n      if (this.multiple && (keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey && manager.activeItemIndex !== previousFocusIndex) {\n        this._toggleFocusedOption();\n      }\n    }\n    /** Reports a value change to the ControlValueAccessor */\n\n  }, {\n    key: \"_reportValueChange\",\n    value: function _reportValueChange() {\n      // Stop reporting value changes after the list has been destroyed. This avoids\n      // cases where the list might wrongly reset its value once it is removed, but\n      // the form control is still live.\n      if (this.options && !this._isDestroyed) {\n        var value = this._getSelectedOptionValues();\n\n        this._onChange(value);\n\n        this._value = value;\n      }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n\n  }, {\n    key: \"_emitChangeEvent\",\n    value: function _emitChangeEvent(options) {\n      this.selectionChange.emit(new MatSelectionListChange(this, options[0], options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(values) {\n      this._value = values;\n\n      if (this.options) {\n        this._setOptionsFromValues(values || []);\n      }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n\n  }, {\n    key: \"setDisabledState\",\n    value: function setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    /** Sets the selected options based on the specified values. */\n\n  }, {\n    key: \"_setOptionsFromValues\",\n    value: function _setOptionsFromValues(values) {\n      var _this9 = this;\n\n      this.options.forEach(function (option) {\n        return option._setSelected(false);\n      });\n      values.forEach(function (value) {\n        var correspondingOption = _this9.options.find(function (option) {\n          // Skip options that are already in the model. This allows us to handle cases\n          // where the same primitive value is selected multiple times.\n          return option.selected ? false : _this9.compareWith(option.value, value);\n        });\n\n        if (correspondingOption) {\n          correspondingOption._setSelected(true);\n        }\n      });\n    }\n    /** Returns the values of the selected options. */\n\n  }, {\n    key: \"_getSelectedOptionValues\",\n    value: function _getSelectedOptionValues() {\n      return this.options.filter(function (option) {\n        return option.selected;\n      }).map(function (option) {\n        return option.value;\n      });\n    }\n    /** Toggles the state of the currently focused option if enabled. */\n\n  }, {\n    key: \"_toggleFocusedOption\",\n    value: function _toggleFocusedOption() {\n      var focusedIndex = this._keyManager.activeItemIndex;\n\n      if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n        var focusedOption = this.options.toArray()[focusedIndex];\n\n        if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n          focusedOption.toggle(); // Emit a change event because the focused option changed its state through user\n          // interaction.\n\n          this._emitChangeEvent([focusedOption]);\n        }\n      }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n\n  }, {\n    key: \"_setAllOptionsSelected\",\n    value: function _setAllOptionsSelected(isSelected, skipDisabled, isUserInput) {\n      // Keep track of whether anything changed, because we only want to\n      // emit the changed event when something actually changed.\n      var changedOptions = [];\n      this.options.forEach(function (option) {\n        if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n          changedOptions.push(option);\n        }\n      });\n\n      if (changedOptions.length) {\n        this._reportValueChange();\n\n        if (isUserInput) {\n          this._emitChangeEvent(changedOptions);\n        }\n      }\n\n      return changedOptions;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n\n  }, {\n    key: \"_isValidIndex\",\n    value: function _isValidIndex(index) {\n      return index >= 0 && index < this.options.length;\n    }\n    /** Returns the index of the specified list option. */\n\n  }, {\n    key: \"_getOptionIndex\",\n    value: function _getOptionIndex(option) {\n      return this.options.toArray().indexOf(option);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n\n  }, {\n    key: \"_markOptionsForCheck\",\n    value: function _markOptionsForCheck() {\n      if (this.options) {\n        this.options.forEach(function (option) {\n          return option._markForCheck();\n        });\n      }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     */\n\n  }, {\n    key: \"_allowFocusEscape\",\n    value: function _allowFocusEscape() {\n      var _this10 = this;\n\n      this._tabIndex = -1;\n      setTimeout(function () {\n        _this10._tabIndex = 0;\n\n        _this10._changeDetector.markForCheck();\n      });\n    }\n    /** Updates the tabindex based upon if the selection list is empty. */\n\n  }, {\n    key: \"_updateTabIndex\",\n    value: function _updateTabIndex() {\n      this._tabIndex = this.options.length === 0 ? -1 : 0;\n    }\n  }]);\n\n  return MatSelectionList;\n}(_MatSelectionListBase);\n\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) {\n  return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor));\n};\n\nMatSelectionList.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatSelectionList,\n  selectors: [[\"mat-selection-list\"]],\n  contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, 5);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    }\n  },\n  hostAttrs: [\"role\", \"listbox\", 1, \"mat-selection-list\", \"mat-list-base\"],\n  hostVars: 3,\n  hostBindings: function MatSelectionList_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) {\n        return ctx._keydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple)(\"aria-disabled\", ctx.disabled.toString())(\"tabindex\", ctx._tabIndex);\n    }\n  },\n  inputs: {\n    disableRipple: \"disableRipple\",\n    tabIndex: \"tabIndex\",\n    color: \"color\",\n    compareWith: \"compareWith\",\n    disabled: \"disabled\",\n    multiple: \"multiple\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\"\n  },\n  exportAs: [\"matSelectionList\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatSelectionList_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n    }\n  },\n  styles: [_c1],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatSelectionList.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: String,\n    decorators: [{\n      type: Attribute,\n      args: ['tabindex']\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: FocusMonitor\n  }];\n};\n\nMatSelectionList.propDecorators = {\n  options: [{\n    type: ContentChildren,\n    args: [MatListOption, {\n      descendants: true\n    }]\n  }],\n  selectionChange: [{\n    type: Output\n  }],\n  tabIndex: [{\n    type: Input\n  }],\n  color: [{\n    type: Input\n  }],\n  compareWith: [{\n    type: Input\n  }],\n  disabled: [{\n    type: Input\n  }],\n  multiple: [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n    type: Component,\n    args: [{\n      selector: 'mat-selection-list',\n      exportAs: 'matSelectionList',\n      inputs: ['disableRipple'],\n      host: {\n        'role': 'listbox',\n        'class': 'mat-selection-list mat-list-base',\n        '(keydown)': '_keydown($event)',\n        '[attr.aria-multiselectable]': 'multiple',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabindex]': '_tabIndex'\n      },\n      template: '<ng-content></ng-content>',\n      encapsulation: ViewEncapsulation.None,\n      providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: String,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc3.FocusMonitor\n    }];\n  }, {\n    selectionChange: [{\n      type: Output\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    compareWith: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    multiple: [{\n      type: Input\n    }],\n    options: [{\n      type: ContentChildren,\n      args: [MatListOption, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatListModule = function MatListModule() {\n  _classCallCheck(this, MatListModule);\n};\n\nMatListModule.ɵfac = function MatListModule_Factory(t) {\n  return new (t || MatListModule)();\n};\n\nMatListModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatListModule\n});\nMatListModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule], MatLineModule, MatCommonModule, MatPseudoCheckboxModule, MatDividerModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n      exports: [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatLineModule, MatCommonModule, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatPseudoCheckboxModule, MatSelectionList, MatListOption, MatDividerModule],\n      declarations: [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatSelectionList, MatListOption]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, {\n    declarations: function declarations() {\n      return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatSelectionList, MatListOption];\n    },\n    imports: function imports() {\n      return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule];\n    },\n    exports: function exports() {\n      return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatLineModule, MatCommonModule, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatPseudoCheckboxModule, MatSelectionList, MatListOption, MatDividerModule];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_LIST, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange }; //# sourceMappingURL=list.js.map","map":{"version":3,"sources":["C:/projects/custom/angular11_12_table/node_modules/@angular/material/fesm2015/list.js"],"names":["CommonModule","InjectionToken","Component","ViewEncapsulation","ChangeDetectionStrategy","ElementRef","Directive","ChangeDetectorRef","Optional","Inject","ContentChildren","ContentChild","Input","forwardRef","ViewChild","EventEmitter","Attribute","Output","NgModule","mixinDisabled","mixinDisableRipple","setLines","MatLine","MatLineModule","MatRippleModule","MatCommonModule","MatPseudoCheckboxModule","coerceBooleanProperty","Subject","takeUntil","startWith","FocusKeyManager","FocusMonitor","SelectionModel","hasModifierKey","A","ENTER","SPACE","UP_ARROW","DOWN_ARROW","NG_VALUE_ACCESSOR","MatDividerModule","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","_c0","_c1","_c2","_c3","_c4","MatListOption_mat_pseudo_checkbox_2_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","selected","disabled","_c5","_c6","_MatListBase","_MatListItemMixinBase","MAT_LIST","MAT_NAV_LIST","MatNavList","arguments","_stateChanges","next","complete","ɵfac","ɵMatNavList_BaseFactory","MatNavList_Factory","t","ɵɵgetInheritedFactory","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","inputs","disableRipple","exportAs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","template","MatNavList_Template","ɵɵprojectionDef","ɵɵprojection","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","host","None","OnPush","providers","MatList","_elementRef","_getListType","nativeElement","classList","add","nodeName","toLowerCase","MatList_Factory","ɵɵdirectiveInject","MatList_Template","ctorParameters","MatListAvatarCssMatStyler","MatListAvatarCssMatStyler_Factory","ɵdir","ɵɵdefineDirective","MatListIconCssMatStyler","MatListIconCssMatStyler_Factory","MatListSubheaderCssMatStyler","MatListSubheaderCssMatStyler_Factory","MatListItem","_element","_changeDetectorRef","navList","list","_isInteractiveList","_destroyed","_disabled","_list","element","_getHostElement","hasAttribute","setAttribute","pipe","subscribe","markForCheck","value","_lines","MatListItem_Factory","contentQueries","MatListItem_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","_avatar","first","_icon","hostVars","hostBindings","MatListItem_HostBindings","ɵɵclassProp","consts","MatListItem_Template","ɵɵelementStart","ɵɵelementEnd","ɵɵadvance","_isRippleDisabled","directives","MatRipple","decorators","propDecorators","descendants","_MatSelectionListBase","_MatListOptionBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","MatSelectionList","multi","MatSelectionListChange","source","option","options","MatListOption","_changeDetector","selectionList","_selected","_hasFocus","checkboxPosition","_inputsInitialized","_color","color","newValue","_value","compareWith","selectedOptions","isSelected","_setSelected","multiple","_reportValueChange","some","wasSelected","Promise","resolve","then","hadFocus","newActiveItem","_removeOptionFromList","focus","_text","textContent","toggle","_emitChangeEvent","_setFocusedOption","_onTouched","select","deselect","MatListOption_Factory","MatListOption_ContentQueries","viewQuery","MatListOption_Query","ɵɵviewQuery","MatListOption_HostBindings","ɵɵlistener","MatListOption_focus_HostBindingHandler","_handleFocus","MatListOption_blur_HostBindingHandler","_handleBlur","MatListOption_click_HostBindingHandler","_handleClick","ɵɵattribute","MatListOption_Template","ɵɵtemplate","NgIf","MatPseudoCheckbox","tabIndex","_focusMonitor","_multiple","_contentInitialized","selectionChange","a1","a2","_tabIndex","_onChange","_","_markOptionsForCheck","Error","_a","_keyManager","withWrap","withTypeAhead","withHomeAndEnd","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","tabOut","_allowFocusEscape","changes","_updateTabIndex","changed","event","added","item","removed","monitor","origin","toFocus","i","length","get","setActiveItem","disableRippleChanges","colorChanges","firstChange","stopMonitoring","_isDestroyed","_setAllOptionsSelected","updateActiveItem","optionIndex","_getOptionIndex","activeItemIndex","Math","min","activeItem","keyCode","manager","previousFocusIndex","hasModifier","isTyping","_toggleFocusedOption","preventDefault","shouldSelect","onKeydown","shiftKey","_getSelectedOptionValues","emit","values","isDisabled","fn","forEach","correspondingOption","find","filter","map","focusedIndex","_isValidIndex","focusedOption","toArray","skipDisabled","isUserInput","changedOptions","push","index","indexOf","_markForCheck","setTimeout","MatSelectionList_Factory","ɵɵinjectAttribute","MatSelectionList_ContentQueries","MatSelectionList_HostBindings","MatSelectionList_keydown_HostBindingHandler","$event","_keydown","toString","outputs","MatSelectionList_Template","String","MatListModule","MatListModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, Inject, ContentChildren, ContentChild, Input, forwardRef, ViewChild, EventEmitter, Attribute, Output, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager, FocusMonitor } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatList.\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\n\nconst _c0 = [\"*\"];\nconst _c1 = \".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\";\nconst _c2 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c4 = [\"text\"];\nfunction MatListOption_mat_pseudo_checkbox_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c5 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c6 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nconst _MatListBase = mixinDisabled(mixinDisableRipple(class {\n}));\n// Boilerplate for applying mixins to MatListItem.\n/** @docs-private */\nconst _MatListItemMixinBase = mixinDisableRipple(class {\n});\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_LIST = new InjectionToken('MatList');\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_NAV_LIST = new InjectionToken('MatNavList');\nclass MatNavList extends _MatListBase {\n    constructor() {\n        super(...arguments);\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = /*@__PURE__*/ function () { let ɵMatNavList_BaseFactory; return function MatNavList_Factory(t) { return (ɵMatNavList_BaseFactory || (ɵMatNavList_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatNavList)))(t || MatNavList); }; }();\nMatNavList.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_NAV_LIST, useExisting: MatNavList }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\\n\\n\",\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{ provide: MAT_NAV_LIST, useExisting: MatNavList }],\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], null, null); })();\nclass MatList extends _MatListBase {\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    _getListType() {\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatList.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], hostAttrs: [1, \"mat-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_LIST, useExisting: MatList }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\\n\\n\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{ provide: MAT_LIST, useExisting: MatList }],\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); };\nMatListAvatarCssMatStyler.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], hostAttrs: [1, \"mat-list-avatar\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); };\nMatListIconCssMatStyler.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], hostAttrs: [1, \"mat-list-icon\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); };\nMatListSubheaderCssMatStyler.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], hostAttrs: [1, \"mat-subheader\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null); })();\n/** An item within a Material Design list. */\nclass MatListItem extends _MatListItemMixinBase {\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attribute is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                _changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Whether the option is disabled. */\n    get disabled() { return this._disabled || !!(this._list && this._list.disabled); }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_NAV_LIST, 8), ɵngcc0.ɵɵdirectiveInject(MAT_LIST, 8)); };\nMatListItem.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostAttrs: [1, \"mat-list-item\", \"mat-focus-indicator\"], hostVars: 6, hostBindings: function MatListItem_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    } }, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c3, decls: 6, vars: 2, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]], template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }, { type: Inject, args: [MAT_NAV_LIST,] }] },\n    { type: MatList, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LIST,] }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item mat-focus-indicator',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_NAV_LIST]\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LIST]\n            }] }]; }, { disabled: [{\n            type: Input\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst _MatSelectionListBase = mixinDisableRipple(class {\n});\nconst _MatListOptionBase = mixinDisableRipple(class {\n});\n/** @docs-private */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSelectionList),\n    multi: true\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\nclass MatSelectionListChange {\n    constructor(\n    /** Reference to the selection list that emitted the event. */\n    source, \n    /**\n     * Reference to the option that has been changed.\n     * @deprecated Use `options` instead, because some events may change more than one option.\n     * @breaking-change 12.0.0\n     */\n    option, \n    /** Reference to the options that have been changed. */\n    options) {\n        this.source = source;\n        this.option = option;\n        this.options = options;\n    }\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionBase {\n    constructor(_element, _changeDetector, \n    /** @docs-private */\n    selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /** Theme color of the list option. This sets the color of the checkbox. */\n    get color() { return this._color || this.selectionList.color; }\n    set color(newValue) { this._color = newValue; }\n    /** Value of the option */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (this.selected &&\n            !this.selectionList.compareWith(newValue, this.value) &&\n            this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /** Whether the option is disabled. */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** Whether the option is selected. */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    set selected(value) {\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            if (isSelected || this.selectionList.multiple) {\n                this.selectionList._reportValueChange();\n            }\n        }\n    }\n    ngOnInit() {\n        const list = this.selectionList;\n        if (list._value && list._value.some(value => list.compareWith(value, this._value))) {\n            this._setSelected(true);\n        }\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        });\n        this._inputsInitialized = true;\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => {\n                this.selected = false;\n            });\n        }\n        const hadFocus = this._hasFocus;\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /** Toggles the selection state of the option. */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent([this]);\n        }\n    }\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /** Sets the selected state of the option. Returns whether the value has changed. */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSelectionList))); };\nMatListOption.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-list-item\", \"mat-list-option\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatListOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatListOption_blur_HostBindingHandler() { return ctx._handleBlur(); })(\"click\", function MatListOption_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled)(\"tabindex\", -1);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-list-single-selected-option\", ctx.selected && !ctx.selectionList.multiple);\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c6, decls: 7, vars: 5, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-list-text\"], [\"text\", \"\"], [3, \"state\", \"disabled\"]], template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatListOption_mat_pseudo_checkbox_2_Template, 1, 2, \"mat-pseudo-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionList.multiple);\n    } }, directives: [ɵngcc1.MatRipple, ɵngcc2.NgIf, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef(() => MatSelectionList),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _text: [{ type: ViewChild, args: ['text',] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    // Even though accent is the default, we need to set this class anyway, because the  list might\n                    // be placed inside a parent that has one of the other colors with a higher specificity.\n                    '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabindex]': '-1'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatSelectionList)]\n            }] }]; }, { checkboxPosition: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text']\n        }] }); })();\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListBase {\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector, \n    // @breaking-change 11.0.0 `_focusMonitor` parameter to become required.\n    _focusMonitor) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /** Emits a change event whenever the selected state of an option changes. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * @breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /** Theme color of the selection list. This sets the checkbox color for all list options. */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (a1, a2) => a1 === a2;\n        this._disabled = false;\n        /** The currently selected options. */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /** The tabindex of the selection list. */\n        this._tabIndex = -1;\n        /** View to model callback that should be called whenever the selected options change. */\n        this._onChange = (_) => { };\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /** View to model callback that should be called if the list or its options lost focus. */\n        this._onTouched = () => { };\n    }\n    /** Whether the selection list is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /** Whether selection is limited to one or multiple items (default multiple). */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (this._contentInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    ngAfterContentInit() {\n        var _a;\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate(() => false)\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this._updateTabIndex();\n        });\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        });\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.monitor(this._element).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n            var _a;\n            if (origin === 'keyboard' || origin === 'program') {\n                let toFocus = 0;\n                for (let i = 0; i < this.options.length; i++) {\n                    if ((_a = this.options.get(i)) === null || _a === void 0 ? void 0 : _a.selected) {\n                        toFocus = i;\n                        break;\n                    }\n                }\n                this._keyManager.setActiveItem(toFocus);\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const disableRippleChanges = changes['disableRipple'];\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.stopMonitoring(this._element);\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. Returns the options that changed as a result. */\n    selectAll() {\n        return this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. Returns the options that changed as a result. */\n    deselectAll() {\n        return this._setAllOptionsSelected(false);\n    }\n    /** Sets the focused option of the selection-list. */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @returns Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /** Passes relevant key presses to our key manager. */\n    _keydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        const previousFocusIndex = manager.activeItemIndex;\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    const shouldSelect = this.options.some(option => !option.disabled && !option.selected);\n                    this._setAllOptionsSelected(shouldSelect, true, true);\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple && (keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /** Reports a value change to the ControlValueAccessor */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n    _emitChangeEvent(options) {\n        this.selectionChange.emit(new MatSelectionListChange(this, options[0], options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Sets the selected options based on the specified values. */\n    _setOptionsFromValues(values) {\n        this.options.forEach(option => option._setSelected(false));\n        values.forEach(value => {\n            const correspondingOption = this.options.find(option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            });\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        });\n    }\n    /** Returns the values of the selected options. */\n    _getSelectedOptionValues() {\n        return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /** Toggles the state of the currently focused option if enabled. */\n    _toggleFocusedOption() {\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent([focusedOption]);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled, isUserInput) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        const changedOptions = [];\n        this.options.forEach(option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                changedOptions.push(option);\n            }\n        });\n        if (changedOptions.length) {\n            this._reportValueChange();\n            if (isUserInput) {\n                this._emitChangeEvent(changedOptions);\n            }\n        }\n        return changedOptions;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /** Returns the index of the specified list option. */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach(option => option._markForCheck());\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout(() => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        });\n    }\n    /** Updates the tabindex based upon if the selection list is empty. */\n    _updateTabIndex() {\n        this._tabIndex = (this.options.length === 0) ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor)); };\nMatSelectionList.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-selection-list\", \"mat-list-base\"], hostVars: 3, hostBindings: function MatSelectionList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple)(\"aria-disabled\", ctx.disabled.toString())(\"tabindex\", ctx._tabIndex);\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }],\n    multiple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(keydown)': '_keydown($event)',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabindex]': '_tabIndex'\n                },\n                template: '<ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc3.FocusMonitor }]; }, { selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatListModule {\n}\nMatListModule.ɵfac = function MatListModule_Factory(t) { return new (t || MatListModule)(); };\nMatListModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule], MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatSelectionList, MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatLineModule,\n        MatCommonModule, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatPseudoCheckboxModule, MatSelectionList, MatListOption, MatDividerModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LIST, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n\n//# sourceMappingURL=list.js.map"]},"metadata":{},"sourceType":"module"}