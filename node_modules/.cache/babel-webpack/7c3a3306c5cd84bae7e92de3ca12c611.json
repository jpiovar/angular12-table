{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/projects/custom/angular12_table/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:/projects/custom/angular12_table/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/projects/custom/angular12_table/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/projects/custom/angular12_table/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/projects/custom/angular12_table/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _toConsumableArray from \"C:/projects/custom/angular12_table/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { compose, ScannedActionsSubject, Store, createAction, StoreRootModule, StoreFeatureModule } from '@ngrx/store';\nimport { merge, Observable, Subject, defer, Notification, pipe, of } from 'rxjs';\nimport { ignoreElements, materialize, map, catchError, filter, groupBy, mergeMap, exhaustMap, dematerialize, take, concatMap, finalize, withLatestFrom } from 'rxjs/operators';\nimport { Injectable, Inject, InjectionToken, ErrorHandler, NgModule, Optional, Injector, SkipSelf, Self } from '@angular/core';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'rxjs';\nimport * as ɵngcc2 from '@ngrx/store';\nvar DEFAULT_EFFECT_CONFIG = {\n  dispatch: true,\n  useEffectsErrorHandler: true\n};\nvar CREATE_EFFECT_METADATA_KEY = '__@ngrx/effects_create__';\n/**\n * @description\n * Creates an effect from an `Observable` and an `EffectConfig`.\n *\n * @param source A function which returns an `Observable`.\n * @param config A `Partial<EffectConfig>` to configure the effect.  By default, `dispatch` is true and `useEffectsErrorHandler` is true.\n * @returns If `EffectConfig`#`dispatch` is true, returns `Observable<Action>`.  Else, returns `Observable<unknown>`.\n *\n * @usageNotes\n *\n * ** Mapping to a different action **\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(FeatureActions.actionOne),\n *     map(() => FeatureActions.actionTwo())\n *   )\n * );\n * ```\n *\n *  ** Non-dispatching effects **\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(FeatureActions.actionOne),\n *     tap(() => console.log('Action One Dispatched'))\n *   ),\n *   { dispatch: false }\n *   // FeatureActions.actionOne is not dispatched\n * );\n * ```\n */\n\nfunction createEffect(source, config) {\n  var effect = source();\n  var value = Object.assign(Object.assign({}, DEFAULT_EFFECT_CONFIG), config);\n  Object.defineProperty(effect, CREATE_EFFECT_METADATA_KEY, {\n    value: value\n  });\n  return effect;\n}\n\nfunction getCreateEffectMetadata(instance) {\n  var propertyNames = Object.getOwnPropertyNames(instance);\n  var metadata = propertyNames.filter(function (propertyName) {\n    if (instance[propertyName] && instance[propertyName].hasOwnProperty(CREATE_EFFECT_METADATA_KEY)) {\n      // If the property type has overridden `hasOwnProperty` we need to ensure\n      // that the metadata is valid (containing a `dispatch`property)\n      // https://github.com/ngrx/platform/issues/2975\n      var property = instance[propertyName];\n      return property[CREATE_EFFECT_METADATA_KEY].hasOwnProperty('dispatch');\n    }\n\n    return false;\n  }).map(function (propertyName) {\n    var metaData = instance[propertyName][CREATE_EFFECT_METADATA_KEY];\n    return Object.assign({\n      propertyName: propertyName\n    }, metaData);\n  });\n  return metadata;\n}\n\nfunction getSourceForInstance(instance) {\n  return Object.getPrototypeOf(instance);\n}\n\nvar METADATA_KEY = '__@ngrx/effects__';\n/**\n * @deprecated The Effect decorator (`@Effect`) is deprecated in favor for the `createEffect` method.\n * See the docs for more info {@link https://ngrx.io/guide/migration/v11#the-effect-decorator}\n */\n\nfunction Effect() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (target, propertyName) {\n    var metadata = Object.assign(Object.assign(Object.assign({}, DEFAULT_EFFECT_CONFIG), config), {\n      // Overrides any defaults if values are provided\n      propertyName: propertyName\n    });\n    addEffectMetadataEntry(target, metadata);\n  };\n}\n\nfunction getEffectDecoratorMetadata(instance) {\n  var effectsDecorators = compose(getEffectMetadataEntries, getSourceForInstance)(instance);\n  return effectsDecorators;\n}\n/**\n * Type guard to detemine whether METADATA_KEY is already present on the Class\n * constructor\n */\n\n\nfunction hasMetadataEntries(sourceProto) {\n  return sourceProto.constructor.hasOwnProperty(METADATA_KEY);\n}\n/** Add Effect Metadata to the Effect Class constructor under specific key */\n\n\nfunction addEffectMetadataEntry(sourceProto, metadata) {\n  if (hasMetadataEntries(sourceProto)) {\n    sourceProto.constructor[METADATA_KEY].push(metadata);\n  } else {\n    Object.defineProperty(sourceProto.constructor, METADATA_KEY, {\n      value: [metadata]\n    });\n  }\n}\n\nfunction getEffectMetadataEntries(sourceProto) {\n  return hasMetadataEntries(sourceProto) ? sourceProto.constructor[METADATA_KEY] : [];\n}\n\nfunction getEffectsMetadata(instance) {\n  return getSourceMetadata(instance).reduce(function (acc, _ref) {\n    var propertyName = _ref.propertyName,\n        dispatch = _ref.dispatch,\n        useEffectsErrorHandler = _ref.useEffectsErrorHandler;\n    acc[propertyName] = {\n      dispatch: dispatch,\n      useEffectsErrorHandler: useEffectsErrorHandler\n    };\n    return acc;\n  }, {});\n}\n\nfunction getSourceMetadata(instance) {\n  var effects = [getEffectDecoratorMetadata, getCreateEffectMetadata];\n  return effects.reduce(function (sources, source) {\n    return sources.concat(source(instance));\n  }, []);\n}\n\nfunction mergeEffects(sourceInstance, globalErrorHandler, effectsErrorHandler) {\n  var sourceName = getSourceForInstance(sourceInstance).constructor.name;\n  var observables$ = getSourceMetadata(sourceInstance).map(function (_ref2) {\n    var propertyName = _ref2.propertyName,\n        dispatch = _ref2.dispatch,\n        useEffectsErrorHandler = _ref2.useEffectsErrorHandler;\n    var observable$ = typeof sourceInstance[propertyName] === 'function' ? sourceInstance[propertyName]() : sourceInstance[propertyName];\n    var effectAction$ = useEffectsErrorHandler ? effectsErrorHandler(observable$, globalErrorHandler) : observable$;\n\n    if (dispatch === false) {\n      return effectAction$.pipe(ignoreElements());\n    }\n\n    var materialized$ = effectAction$.pipe(materialize());\n    return materialized$.pipe(map(function (notification) {\n      return {\n        effect: sourceInstance[propertyName],\n        notification: notification,\n        propertyName: propertyName,\n        sourceName: sourceName,\n        sourceInstance: sourceInstance\n      };\n    }));\n  });\n  return merge.apply(void 0, _toConsumableArray(observables$));\n}\n\nvar MAX_NUMBER_OF_RETRY_ATTEMPTS = 10;\n\nfunction defaultEffectsErrorHandler(observable$, errorHandler) {\n  var retryAttemptLeft = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : MAX_NUMBER_OF_RETRY_ATTEMPTS;\n  return observable$.pipe(catchError(function (error) {\n    if (errorHandler) errorHandler.handleError(error);\n\n    if (retryAttemptLeft <= 1) {\n      return observable$; // last attempt\n    } // Return observable that produces this particular effect\n\n\n    return defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft - 1);\n  }));\n}\n\nvar Actions = /*#__PURE__*/function (_Observable) {\n  _inherits(Actions, _Observable);\n\n  var _super = _createSuper(Actions);\n\n  function Actions(source) {\n    var _this;\n\n    _classCallCheck(this, Actions);\n\n    _this = _super.call(this);\n\n    if (source) {\n      _this.source = source;\n    }\n\n    return _this;\n  }\n\n  _createClass(Actions, [{\n    key: \"lift\",\n    value: function lift(operator) {\n      var observable = new Actions();\n      observable.source = this;\n      observable.operator = operator;\n      return observable;\n    }\n  }]);\n\n  return Actions;\n}(Observable);\n\nActions.ɵfac = function Actions_Factory(t) {\n  return new (t || Actions)(ɵngcc0.ɵɵinject(ScannedActionsSubject));\n};\n\nActions.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: Actions,\n  factory: Actions.ɵfac\n});\n/** @nocollapse */\n\nActions.ctorParameters = function () {\n  return [{\n    type: Observable,\n    decorators: [{\n      type: Inject,\n      args: [ScannedActionsSubject]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Actions, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc1.Observable,\n      decorators: [{\n        type: Inject,\n        args: [ScannedActionsSubject]\n      }]\n    }];\n  }, null);\n})();\n/**\n * `ofType` filters an Observable of `Actions` into an Observable of the actions\n * whose type strings are passed to it.\n *\n * For example, if `actions` has type `Actions<AdditionAction|SubstractionAction>`, and\n * the type of the `Addition` action is `add`, then\n * `actions.pipe(ofType('add'))` returns an `Observable<AdditionAction>`.\n *\n * Properly typing this function is hard and requires some advanced TS tricks\n * below.\n *\n * Type narrowing automatically works, as long as your `actions` object\n * starts with a `Actions<SomeUnionOfActions>` instead of generic `Actions`.\n *\n * For backwards compatibility, when one passes a single type argument\n * `ofType<T>('something')` the result is an `Observable<T>`. Note, that `T`\n * completely overrides any possible inference from 'something'.\n *\n * Unfortunately, for unknown 'actions: Actions' these types will produce\n * 'Observable<never>'. In such cases one has to manually set the generic type\n * like `actions.ofType<AdditionAction>('add')`.\n */\n\n\nfunction ofType() {\n  for (var _len = arguments.length, allowedTypes = new Array(_len), _key = 0; _key < _len; _key++) {\n    allowedTypes[_key] = arguments[_key];\n  }\n\n  return filter(function (action) {\n    return allowedTypes.some(function (typeOrActionCreator) {\n      if (typeof typeOrActionCreator === 'string') {\n        // Comparing the string to type\n        return typeOrActionCreator === action.type;\n      } // We are filtering by ActionCreator\n\n\n      return typeOrActionCreator.type === action.type;\n    });\n  });\n}\n\nfunction reportInvalidActions(output, reporter) {\n  if (output.notification.kind === 'N') {\n    var action = output.notification.value;\n    var isInvalidAction = !isAction(action);\n\n    if (isInvalidAction) {\n      reporter.handleError(new Error(\"Effect \".concat(getEffectName(output), \" dispatched an invalid action: \").concat(stringify(action))));\n    }\n  }\n}\n\nfunction isAction(action) {\n  return typeof action !== 'function' && action && action.type && typeof action.type === 'string';\n}\n\nfunction getEffectName(_ref3) {\n  var propertyName = _ref3.propertyName,\n      sourceInstance = _ref3.sourceInstance,\n      sourceName = _ref3.sourceName;\n  var isMethod = typeof sourceInstance[propertyName] === 'function';\n  return \"\\\"\".concat(sourceName, \".\").concat(String(propertyName)).concat(isMethod ? '()' : '', \"\\\"\");\n}\n\nfunction stringify(action) {\n  try {\n    return JSON.stringify(action);\n  } catch (_a) {\n    return action;\n  }\n}\n\nvar onIdentifyEffectsKey = 'ngrxOnIdentifyEffects';\n\nfunction isOnIdentifyEffects(instance) {\n  return isFunction(instance, onIdentifyEffectsKey);\n}\n\nvar onRunEffectsKey = 'ngrxOnRunEffects';\n\nfunction isOnRunEffects(instance) {\n  return isFunction(instance, onRunEffectsKey);\n}\n\nvar onInitEffects = 'ngrxOnInitEffects';\n\nfunction isOnInitEffects(instance) {\n  return isFunction(instance, onInitEffects);\n}\n\nfunction isFunction(instance, functionName) {\n  return instance && functionName in instance && typeof instance[functionName] === 'function';\n}\n\nvar _ROOT_EFFECTS_GUARD = new InjectionToken('@ngrx/effects Internal Root Guard');\n\nvar USER_PROVIDED_EFFECTS = new InjectionToken('@ngrx/effects User Provided Effects');\n\nvar _ROOT_EFFECTS = new InjectionToken('@ngrx/effects Internal Root Effects');\n\nvar ROOT_EFFECTS = new InjectionToken('@ngrx/effects Root Effects');\n\nvar _FEATURE_EFFECTS = new InjectionToken('@ngrx/effects Internal Feature Effects');\n\nvar FEATURE_EFFECTS = new InjectionToken('@ngrx/effects Feature Effects');\nvar EFFECTS_ERROR_HANDLER = new InjectionToken('@ngrx/effects Effects Error Handler');\n\nvar EffectSources = /*#__PURE__*/function (_Subject) {\n  _inherits(EffectSources, _Subject);\n\n  var _super2 = _createSuper(EffectSources);\n\n  function EffectSources(errorHandler, effectsErrorHandler) {\n    var _this2;\n\n    _classCallCheck(this, EffectSources);\n\n    _this2 = _super2.call(this);\n    _this2.errorHandler = errorHandler;\n    _this2.effectsErrorHandler = effectsErrorHandler;\n    return _this2;\n  }\n\n  _createClass(EffectSources, [{\n    key: \"addEffects\",\n    value: function addEffects(effectSourceInstance) {\n      this.next(effectSourceInstance);\n    }\n    /**\n     * @internal\n     */\n\n  }, {\n    key: \"toActions\",\n    value: function toActions() {\n      var _this3 = this;\n\n      return this.pipe(groupBy(getSourceForInstance), mergeMap(function (source$) {\n        return source$.pipe(groupBy(effectsInstance));\n      }), mergeMap(function (source$) {\n        var effect$ = source$.pipe(exhaustMap(function (sourceInstance) {\n          return resolveEffectSource(_this3.errorHandler, _this3.effectsErrorHandler)(sourceInstance);\n        }), map(function (output) {\n          reportInvalidActions(output, _this3.errorHandler);\n          return output.notification;\n        }), filter(function (notification) {\n          return notification.kind === 'N' && notification.value != null;\n        }), dematerialize()); // start the stream with an INIT action\n        // do this only for the first Effect instance\n\n        var init$ = source$.pipe(take(1), filter(isOnInitEffects), map(function (instance) {\n          return instance.ngrxOnInitEffects();\n        }));\n        return merge(effect$, init$);\n      }));\n    }\n  }]);\n\n  return EffectSources;\n}(Subject);\n\nEffectSources.ɵfac = function EffectSources_Factory(t) {\n  return new (t || EffectSources)(ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler), ɵngcc0.ɵɵinject(EFFECTS_ERROR_HANDLER));\n};\n\nEffectSources.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: EffectSources,\n  factory: EffectSources.ɵfac\n});\n/** @nocollapse */\n\nEffectSources.ctorParameters = function () {\n  return [{\n    type: ErrorHandler\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [EFFECTS_ERROR_HANDLER]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectSources, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.ErrorHandler\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [EFFECTS_ERROR_HANDLER]\n      }]\n    }];\n  }, null);\n})();\n\nfunction effectsInstance(sourceInstance) {\n  if (isOnIdentifyEffects(sourceInstance)) {\n    return sourceInstance.ngrxOnIdentifyEffects();\n  }\n\n  return '';\n}\n\nfunction resolveEffectSource(errorHandler, effectsErrorHandler) {\n  return function (sourceInstance) {\n    var mergedEffects$ = mergeEffects(sourceInstance, errorHandler, effectsErrorHandler);\n\n    if (isOnRunEffects(sourceInstance)) {\n      return sourceInstance.ngrxOnRunEffects(mergedEffects$);\n    }\n\n    return mergedEffects$;\n  };\n}\n\nvar EffectsRunner = /*#__PURE__*/function () {\n  function EffectsRunner(effectSources, store) {\n    _classCallCheck(this, EffectsRunner);\n\n    this.effectSources = effectSources;\n    this.store = store;\n    this.effectsSubscription = null;\n  }\n\n  _createClass(EffectsRunner, [{\n    key: \"start\",\n    value: function start() {\n      if (!this.effectsSubscription) {\n        this.effectsSubscription = this.effectSources.toActions().subscribe(this.store);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.effectsSubscription) {\n        this.effectsSubscription.unsubscribe();\n        this.effectsSubscription = null;\n      }\n    }\n  }]);\n\n  return EffectsRunner;\n}();\n\nEffectsRunner.ɵfac = function EffectsRunner_Factory(t) {\n  return new (t || EffectsRunner)(ɵngcc0.ɵɵinject(EffectSources), ɵngcc0.ɵɵinject(ɵngcc2.Store));\n};\n\nEffectsRunner.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: EffectsRunner,\n  factory: EffectsRunner.ɵfac\n});\n/** @nocollapse */\n\nEffectsRunner.ctorParameters = function () {\n  return [{\n    type: EffectSources\n  }, {\n    type: Store\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectsRunner, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: EffectSources\n    }, {\n      type: ɵngcc2.Store\n    }];\n  }, null);\n})();\n\nvar ROOT_EFFECTS_INIT = '@ngrx/effects/init';\nvar rootEffectsInit = createAction(ROOT_EFFECTS_INIT);\n\nvar EffectsRootModule = /*#__PURE__*/function () {\n  function EffectsRootModule(sources, runner, store, rootEffects, storeRootModule, storeFeatureModule, guard) {\n    _classCallCheck(this, EffectsRootModule);\n\n    this.sources = sources;\n    runner.start();\n    rootEffects.forEach(function (effectSourceInstance) {\n      return sources.addEffects(effectSourceInstance);\n    });\n    store.dispatch({\n      type: ROOT_EFFECTS_INIT\n    });\n  }\n\n  _createClass(EffectsRootModule, [{\n    key: \"addEffects\",\n    value: function addEffects(effectSourceInstance) {\n      this.sources.addEffects(effectSourceInstance);\n    }\n  }]);\n\n  return EffectsRootModule;\n}();\n\nEffectsRootModule.ɵfac = function EffectsRootModule_Factory(t) {\n  return new (t || EffectsRootModule)(ɵngcc0.ɵɵinject(EffectSources), ɵngcc0.ɵɵinject(EffectsRunner), ɵngcc0.ɵɵinject(ɵngcc2.Store), ɵngcc0.ɵɵinject(ROOT_EFFECTS), ɵngcc0.ɵɵinject(ɵngcc2.StoreRootModule, 8), ɵngcc0.ɵɵinject(ɵngcc2.StoreFeatureModule, 8), ɵngcc0.ɵɵinject(_ROOT_EFFECTS_GUARD, 8));\n};\n\nEffectsRootModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: EffectsRootModule\n});\nEffectsRootModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n/** @nocollapse */\n\nEffectsRootModule.ctorParameters = function () {\n  return [{\n    type: EffectSources\n  }, {\n    type: EffectsRunner\n  }, {\n    type: Store\n  }, {\n    type: Array,\n    decorators: [{\n      type: Inject,\n      args: [ROOT_EFFECTS]\n    }]\n  }, {\n    type: StoreRootModule,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: StoreFeatureModule,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [_ROOT_EFFECTS_GUARD]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectsRootModule, [{\n    type: NgModule,\n    args: [{}]\n  }], function () {\n    return [{\n      type: EffectSources\n    }, {\n      type: EffectsRunner\n    }, {\n      type: ɵngcc2.Store\n    }, {\n      type: Array,\n      decorators: [{\n        type: Inject,\n        args: [ROOT_EFFECTS]\n      }]\n    }, {\n      type: ɵngcc2.StoreRootModule,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc2.StoreFeatureModule,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [_ROOT_EFFECTS_GUARD]\n      }]\n    }];\n  }, null);\n})();\n\nvar EffectsFeatureModule = function EffectsFeatureModule(root, effectSourceGroups, storeRootModule, storeFeatureModule) {\n  _classCallCheck(this, EffectsFeatureModule);\n\n  effectSourceGroups.forEach(function (group) {\n    return group.forEach(function (effectSourceInstance) {\n      return root.addEffects(effectSourceInstance);\n    });\n  });\n};\n\nEffectsFeatureModule.ɵfac = function EffectsFeatureModule_Factory(t) {\n  return new (t || EffectsFeatureModule)(ɵngcc0.ɵɵinject(EffectsRootModule), ɵngcc0.ɵɵinject(FEATURE_EFFECTS), ɵngcc0.ɵɵinject(ɵngcc2.StoreRootModule, 8), ɵngcc0.ɵɵinject(ɵngcc2.StoreFeatureModule, 8));\n};\n\nEffectsFeatureModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: EffectsFeatureModule\n});\nEffectsFeatureModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n/** @nocollapse */\n\nEffectsFeatureModule.ctorParameters = function () {\n  return [{\n    type: EffectsRootModule\n  }, {\n    type: Array,\n    decorators: [{\n      type: Inject,\n      args: [FEATURE_EFFECTS]\n    }]\n  }, {\n    type: StoreRootModule,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: StoreFeatureModule,\n    decorators: [{\n      type: Optional\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectsFeatureModule, [{\n    type: NgModule,\n    args: [{}]\n  }], function () {\n    return [{\n      type: EffectsRootModule\n    }, {\n      type: Array,\n      decorators: [{\n        type: Inject,\n        args: [FEATURE_EFFECTS]\n      }]\n    }, {\n      type: ɵngcc2.StoreRootModule,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc2.StoreFeatureModule,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nvar EffectsModule = /*#__PURE__*/function () {\n  function EffectsModule() {\n    _classCallCheck(this, EffectsModule);\n  }\n\n  _createClass(EffectsModule, null, [{\n    key: \"forFeature\",\n    value: function forFeature() {\n      var featureEffects = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      return {\n        ngModule: EffectsFeatureModule,\n        providers: [featureEffects, {\n          provide: _FEATURE_EFFECTS,\n          multi: true,\n          useValue: featureEffects\n        }, {\n          provide: USER_PROVIDED_EFFECTS,\n          multi: true,\n          useValue: []\n        }, {\n          provide: FEATURE_EFFECTS,\n          multi: true,\n          useFactory: createEffects,\n          deps: [Injector, _FEATURE_EFFECTS, USER_PROVIDED_EFFECTS]\n        }]\n      };\n    }\n  }, {\n    key: \"forRoot\",\n    value: function forRoot() {\n      var rootEffects = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      return {\n        ngModule: EffectsRootModule,\n        providers: [{\n          provide: EFFECTS_ERROR_HANDLER,\n          useValue: defaultEffectsErrorHandler\n        }, EffectsRunner, EffectSources, Actions, rootEffects, {\n          provide: _ROOT_EFFECTS,\n          useValue: [rootEffects]\n        }, {\n          provide: _ROOT_EFFECTS_GUARD,\n          useFactory: _provideForRootGuard,\n          deps: [[EffectsRunner, new Optional(), new SkipSelf()], [_ROOT_EFFECTS, new Self()]]\n        }, {\n          provide: USER_PROVIDED_EFFECTS,\n          multi: true,\n          useValue: []\n        }, {\n          provide: ROOT_EFFECTS,\n          useFactory: createEffects,\n          deps: [Injector, _ROOT_EFFECTS, USER_PROVIDED_EFFECTS]\n        }]\n      };\n    }\n  }]);\n\n  return EffectsModule;\n}();\n\nEffectsModule.ɵfac = function EffectsModule_Factory(t) {\n  return new (t || EffectsModule)();\n};\n\nEffectsModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: EffectsModule\n});\nEffectsModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectsModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n\nfunction createEffects(injector, effectGroups, userProvidedEffectGroups) {\n  var mergedEffects = [];\n\n  var _iterator = _createForOfIteratorHelper(effectGroups),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var effectGroup = _step.value;\n      mergedEffects.push.apply(mergedEffects, _toConsumableArray(effectGroup));\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var _iterator2 = _createForOfIteratorHelper(userProvidedEffectGroups),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var userProvidedEffectGroup = _step2.value;\n      mergedEffects.push.apply(mergedEffects, _toConsumableArray(userProvidedEffectGroup));\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return createEffectInstances(injector, mergedEffects);\n}\n\nfunction createEffectInstances(injector, effects) {\n  return effects.map(function (effect) {\n    return injector.get(effect);\n  });\n}\n\nfunction _provideForRootGuard(runner, rootEffects) {\n  // check whether any effects are actually passed\n  var hasEffects = !(rootEffects.length === 1 && rootEffects[0].length === 0);\n\n  if (hasEffects && runner) {\n    throw new TypeError(\"EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.\");\n  }\n\n  return 'guarded';\n}\n/**\n * Wraps project fn with error handling making it safe to use in Effects.\n * Takes either a config with named properties that represent different possible\n * callbacks or project/error callbacks that are required.\n */\n\n\nfunction act(\n/** Allow to take either config object or project/error functions */\nconfigOrProject, errorFn) {\n  var _ref4 = typeof configOrProject === 'function' ? {\n    project: configOrProject,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    error: errorFn,\n    operator: concatMap,\n    complete: undefined,\n    unsubscribe: undefined\n  } : Object.assign(Object.assign({}, configOrProject), {\n    operator: configOrProject.operator || concatMap\n  }),\n      project = _ref4.project,\n      error = _ref4.error,\n      complete = _ref4.complete,\n      operator = _ref4.operator,\n      unsubscribe = _ref4.unsubscribe;\n\n  return function (source) {\n    return defer(function () {\n      var subject = new Subject();\n      return merge(source.pipe(operator(function (input, index) {\n        return defer(function () {\n          var completed = false;\n          var errored = false;\n          var projectedCount = 0;\n          return project(input, index).pipe(materialize(), map(function (notification) {\n            switch (notification.kind) {\n              case 'E':\n                errored = true;\n                return new Notification('N', error(notification.error, input));\n\n              case 'C':\n                completed = true;\n                return complete ? new Notification('N', complete(projectedCount, input)) : undefined;\n\n              default:\n                ++projectedCount;\n                return notification;\n            }\n          }), filter(function (n) {\n            return n != null;\n          }), dematerialize(), finalize(function () {\n            if (!completed && !errored && unsubscribe) {\n              subject.next(unsubscribe(projectedCount, input));\n            }\n          }));\n        });\n      })), subject);\n    });\n  };\n}\n/**\n * `concatLatestFrom` combines the source value\n * and the last available value from a lazily evaluated Observable\n * in a new array\n */\n\n\nfunction concatLatestFrom(observablesFactory) {\n  return pipe(concatMap(function (value) {\n    var observables = observablesFactory(value);\n    var observablesAsArray = Array.isArray(observables) ? observables : [observables];\n    return of(value).pipe(withLatestFrom.apply(void 0, _toConsumableArray(observablesAsArray)));\n  }));\n}\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Actions, EFFECTS_ERROR_HANDLER, Effect, EffectSources, EffectsFeatureModule, EffectsModule, EffectsRootModule, EffectsRunner, ROOT_EFFECTS_INIT, USER_PROVIDED_EFFECTS, act, concatLatestFrom, createEffect, defaultEffectsErrorHandler, getEffectsMetadata, mergeEffects, ofType, rootEffectsInit, getSourceMetadata as ɵa, createEffects as ɵb, _provideForRootGuard as ɵc, _ROOT_EFFECTS_GUARD as ɵd, _ROOT_EFFECTS as ɵe, ROOT_EFFECTS as ɵf, _FEATURE_EFFECTS as ɵg, FEATURE_EFFECTS as ɵh }; //# sourceMappingURL=ngrx-effects.js.map","map":{"version":3,"sources":["C:/projects/custom/angular12_table/node_modules/@ngrx/effects/fesm2015/ngrx-effects.js"],"names":["compose","ScannedActionsSubject","Store","createAction","StoreRootModule","StoreFeatureModule","merge","Observable","Subject","defer","Notification","pipe","of","ignoreElements","materialize","map","catchError","filter","groupBy","mergeMap","exhaustMap","dematerialize","take","concatMap","finalize","withLatestFrom","Injectable","Inject","InjectionToken","ErrorHandler","NgModule","Optional","Injector","SkipSelf","Self","ɵngcc0","ɵngcc1","ɵngcc2","DEFAULT_EFFECT_CONFIG","dispatch","useEffectsErrorHandler","CREATE_EFFECT_METADATA_KEY","createEffect","source","config","effect","value","Object","assign","defineProperty","getCreateEffectMetadata","instance","propertyNames","getOwnPropertyNames","metadata","propertyName","hasOwnProperty","property","metaData","getSourceForInstance","getPrototypeOf","METADATA_KEY","Effect","target","addEffectMetadataEntry","getEffectDecoratorMetadata","effectsDecorators","getEffectMetadataEntries","hasMetadataEntries","sourceProto","constructor","push","getEffectsMetadata","getSourceMetadata","reduce","acc","effects","sources","concat","mergeEffects","sourceInstance","globalErrorHandler","effectsErrorHandler","sourceName","name","observables$","observable$","effectAction$","materialized$","notification","MAX_NUMBER_OF_RETRY_ATTEMPTS","defaultEffectsErrorHandler","errorHandler","retryAttemptLeft","error","handleError","Actions","operator","observable","ɵfac","Actions_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","ctorParameters","type","decorators","args","ngDevMode","ɵsetClassMetadata","ofType","allowedTypes","action","some","typeOrActionCreator","reportInvalidActions","output","reporter","kind","isInvalidAction","isAction","Error","getEffectName","stringify","isMethod","String","JSON","_a","onIdentifyEffectsKey","isOnIdentifyEffects","isFunction","onRunEffectsKey","isOnRunEffects","onInitEffects","isOnInitEffects","functionName","_ROOT_EFFECTS_GUARD","USER_PROVIDED_EFFECTS","_ROOT_EFFECTS","ROOT_EFFECTS","_FEATURE_EFFECTS","FEATURE_EFFECTS","EFFECTS_ERROR_HANDLER","EffectSources","effectSourceInstance","next","source$","effectsInstance","effect$","resolveEffectSource","init$","ngrxOnInitEffects","EffectSources_Factory","undefined","ngrxOnIdentifyEffects","mergedEffects$","ngrxOnRunEffects","EffectsRunner","effectSources","store","effectsSubscription","toActions","subscribe","unsubscribe","EffectsRunner_Factory","ROOT_EFFECTS_INIT","rootEffectsInit","EffectsRootModule","runner","rootEffects","storeRootModule","storeFeatureModule","guard","start","forEach","addEffects","EffectsRootModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","Array","EffectsFeatureModule","root","effectSourceGroups","group","EffectsFeatureModule_Factory","EffectsModule","featureEffects","ngModule","providers","provide","multi","useValue","useFactory","createEffects","deps","_provideForRootGuard","EffectsModule_Factory","injector","effectGroups","userProvidedEffectGroups","mergedEffects","effectGroup","userProvidedEffectGroup","createEffectInstances","get","hasEffects","length","TypeError","act","configOrProject","errorFn","project","complete","subject","input","index","completed","errored","projectedCount","n","concatLatestFrom","observablesFactory","observables","observablesAsArray","isArray","ɵa","ɵb","ɵc","ɵd","ɵe","ɵf","ɵg","ɵh"],"mappings":"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","sourcesContent":["import { compose, ScannedActionsSubject, Store, createAction, StoreRootModule, StoreFeatureModule } from '@ngrx/store';\nimport { merge, Observable, Subject, defer, Notification, pipe, of } from 'rxjs';\nimport { ignoreElements, materialize, map, catchError, filter, groupBy, mergeMap, exhaustMap, dematerialize, take, concatMap, finalize, withLatestFrom } from 'rxjs/operators';\nimport { Injectable, Inject, InjectionToken, ErrorHandler, NgModule, Optional, Injector, SkipSelf, Self } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'rxjs';\nimport * as ɵngcc2 from '@ngrx/store';\nconst DEFAULT_EFFECT_CONFIG = {\n    dispatch: true,\n    useEffectsErrorHandler: true,\n};\nconst CREATE_EFFECT_METADATA_KEY = '__@ngrx/effects_create__';\n\n/**\n * @description\n * Creates an effect from an `Observable` and an `EffectConfig`.\n *\n * @param source A function which returns an `Observable`.\n * @param config A `Partial<EffectConfig>` to configure the effect.  By default, `dispatch` is true and `useEffectsErrorHandler` is true.\n * @returns If `EffectConfig`#`dispatch` is true, returns `Observable<Action>`.  Else, returns `Observable<unknown>`.\n *\n * @usageNotes\n *\n * ** Mapping to a different action **\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(FeatureActions.actionOne),\n *     map(() => FeatureActions.actionTwo())\n *   )\n * );\n * ```\n *\n *  ** Non-dispatching effects **\n * ```ts\n * effectName$ = createEffect(\n *   () => this.actions$.pipe(\n *     ofType(FeatureActions.actionOne),\n *     tap(() => console.log('Action One Dispatched'))\n *   ),\n *   { dispatch: false }\n *   // FeatureActions.actionOne is not dispatched\n * );\n * ```\n */\nfunction createEffect(source, config) {\n    const effect = source();\n    const value = Object.assign(Object.assign({}, DEFAULT_EFFECT_CONFIG), config);\n    Object.defineProperty(effect, CREATE_EFFECT_METADATA_KEY, {\n        value,\n    });\n    return effect;\n}\nfunction getCreateEffectMetadata(instance) {\n    const propertyNames = Object.getOwnPropertyNames(instance);\n    const metadata = propertyNames\n        .filter((propertyName) => {\n        if (instance[propertyName] &&\n            instance[propertyName].hasOwnProperty(CREATE_EFFECT_METADATA_KEY)) {\n            // If the property type has overridden `hasOwnProperty` we need to ensure\n            // that the metadata is valid (containing a `dispatch`property)\n            // https://github.com/ngrx/platform/issues/2975\n            const property = instance[propertyName];\n            return property[CREATE_EFFECT_METADATA_KEY].hasOwnProperty('dispatch');\n        }\n        return false;\n    })\n        .map((propertyName) => {\n        const metaData = instance[propertyName][CREATE_EFFECT_METADATA_KEY];\n        return Object.assign({ propertyName }, metaData);\n    });\n    return metadata;\n}\n\nfunction getSourceForInstance(instance) {\n    return Object.getPrototypeOf(instance);\n}\n\nconst METADATA_KEY = '__@ngrx/effects__';\n/**\n * @deprecated The Effect decorator (`@Effect`) is deprecated in favor for the `createEffect` method.\n * See the docs for more info {@link https://ngrx.io/guide/migration/v11#the-effect-decorator}\n */\nfunction Effect(config = {}) {\n    return function (target, propertyName) {\n        const metadata = Object.assign(Object.assign(Object.assign({}, DEFAULT_EFFECT_CONFIG), config), { // Overrides any defaults if values are provided\n            propertyName });\n        addEffectMetadataEntry(target, metadata);\n    };\n}\nfunction getEffectDecoratorMetadata(instance) {\n    const effectsDecorators = compose(getEffectMetadataEntries, getSourceForInstance)(instance);\n    return effectsDecorators;\n}\n/**\n * Type guard to detemine whether METADATA_KEY is already present on the Class\n * constructor\n */\nfunction hasMetadataEntries(sourceProto) {\n    return sourceProto.constructor.hasOwnProperty(METADATA_KEY);\n}\n/** Add Effect Metadata to the Effect Class constructor under specific key */\nfunction addEffectMetadataEntry(sourceProto, metadata) {\n    if (hasMetadataEntries(sourceProto)) {\n        sourceProto.constructor[METADATA_KEY].push(metadata);\n    }\n    else {\n        Object.defineProperty(sourceProto.constructor, METADATA_KEY, {\n            value: [metadata],\n        });\n    }\n}\nfunction getEffectMetadataEntries(sourceProto) {\n    return hasMetadataEntries(sourceProto)\n        ? sourceProto.constructor[METADATA_KEY]\n        : [];\n}\n\nfunction getEffectsMetadata(instance) {\n    return getSourceMetadata(instance).reduce((acc, { propertyName, dispatch, useEffectsErrorHandler }) => {\n        acc[propertyName] = { dispatch, useEffectsErrorHandler };\n        return acc;\n    }, {});\n}\nfunction getSourceMetadata(instance) {\n    const effects = [\n        getEffectDecoratorMetadata,\n        getCreateEffectMetadata,\n    ];\n    return effects.reduce((sources, source) => sources.concat(source(instance)), []);\n}\n\nfunction mergeEffects(sourceInstance, globalErrorHandler, effectsErrorHandler) {\n    const sourceName = getSourceForInstance(sourceInstance).constructor.name;\n    const observables$ = getSourceMetadata(sourceInstance).map(({ propertyName, dispatch, useEffectsErrorHandler, }) => {\n        const observable$ = typeof sourceInstance[propertyName] === 'function'\n            ? sourceInstance[propertyName]()\n            : sourceInstance[propertyName];\n        const effectAction$ = useEffectsErrorHandler\n            ? effectsErrorHandler(observable$, globalErrorHandler)\n            : observable$;\n        if (dispatch === false) {\n            return effectAction$.pipe(ignoreElements());\n        }\n        const materialized$ = effectAction$.pipe(materialize());\n        return materialized$.pipe(map((notification) => ({\n            effect: sourceInstance[propertyName],\n            notification,\n            propertyName,\n            sourceName,\n            sourceInstance,\n        })));\n    });\n    return merge(...observables$);\n}\n\nconst MAX_NUMBER_OF_RETRY_ATTEMPTS = 10;\nfunction defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft = MAX_NUMBER_OF_RETRY_ATTEMPTS) {\n    return observable$.pipe(catchError((error) => {\n        if (errorHandler)\n            errorHandler.handleError(error);\n        if (retryAttemptLeft <= 1) {\n            return observable$; // last attempt\n        }\n        // Return observable that produces this particular effect\n        return defaultEffectsErrorHandler(observable$, errorHandler, retryAttemptLeft - 1);\n    }));\n}\n\nclass Actions extends Observable {\n    constructor(source) {\n        super();\n        if (source) {\n            this.source = source;\n        }\n    }\n    lift(operator) {\n        const observable = new Actions();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n}\nActions.ɵfac = function Actions_Factory(t) { return new (t || Actions)(ɵngcc0.ɵɵinject(ScannedActionsSubject)); };\nActions.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Actions, factory: Actions.ɵfac });\n/** @nocollapse */\nActions.ctorParameters = () => [\n    { type: Observable, decorators: [{ type: Inject, args: [ScannedActionsSubject,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Actions, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.Observable, decorators: [{\n                type: Inject,\n                args: [ScannedActionsSubject]\n            }] }]; }, null); })();\n/**\n * `ofType` filters an Observable of `Actions` into an Observable of the actions\n * whose type strings are passed to it.\n *\n * For example, if `actions` has type `Actions<AdditionAction|SubstractionAction>`, and\n * the type of the `Addition` action is `add`, then\n * `actions.pipe(ofType('add'))` returns an `Observable<AdditionAction>`.\n *\n * Properly typing this function is hard and requires some advanced TS tricks\n * below.\n *\n * Type narrowing automatically works, as long as your `actions` object\n * starts with a `Actions<SomeUnionOfActions>` instead of generic `Actions`.\n *\n * For backwards compatibility, when one passes a single type argument\n * `ofType<T>('something')` the result is an `Observable<T>`. Note, that `T`\n * completely overrides any possible inference from 'something'.\n *\n * Unfortunately, for unknown 'actions: Actions' these types will produce\n * 'Observable<never>'. In such cases one has to manually set the generic type\n * like `actions.ofType<AdditionAction>('add')`.\n */\nfunction ofType(...allowedTypes) {\n    return filter((action) => allowedTypes.some((typeOrActionCreator) => {\n        if (typeof typeOrActionCreator === 'string') {\n            // Comparing the string to type\n            return typeOrActionCreator === action.type;\n        }\n        // We are filtering by ActionCreator\n        return typeOrActionCreator.type === action.type;\n    }));\n}\n\nfunction reportInvalidActions(output, reporter) {\n    if (output.notification.kind === 'N') {\n        const action = output.notification.value;\n        const isInvalidAction = !isAction(action);\n        if (isInvalidAction) {\n            reporter.handleError(new Error(`Effect ${getEffectName(output)} dispatched an invalid action: ${stringify(action)}`));\n        }\n    }\n}\nfunction isAction(action) {\n    return (typeof action !== 'function' &&\n        action &&\n        action.type &&\n        typeof action.type === 'string');\n}\nfunction getEffectName({ propertyName, sourceInstance, sourceName, }) {\n    const isMethod = typeof sourceInstance[propertyName] === 'function';\n    return `\"${sourceName}.${String(propertyName)}${isMethod ? '()' : ''}\"`;\n}\nfunction stringify(action) {\n    try {\n        return JSON.stringify(action);\n    }\n    catch (_a) {\n        return action;\n    }\n}\n\nconst onIdentifyEffectsKey = 'ngrxOnIdentifyEffects';\nfunction isOnIdentifyEffects(instance) {\n    return isFunction(instance, onIdentifyEffectsKey);\n}\nconst onRunEffectsKey = 'ngrxOnRunEffects';\nfunction isOnRunEffects(instance) {\n    return isFunction(instance, onRunEffectsKey);\n}\nconst onInitEffects = 'ngrxOnInitEffects';\nfunction isOnInitEffects(instance) {\n    return isFunction(instance, onInitEffects);\n}\nfunction isFunction(instance, functionName) {\n    return (instance &&\n        functionName in instance &&\n        typeof instance[functionName] === 'function');\n}\n\nconst _ROOT_EFFECTS_GUARD = new InjectionToken('@ngrx/effects Internal Root Guard');\nconst USER_PROVIDED_EFFECTS = new InjectionToken('@ngrx/effects User Provided Effects');\nconst _ROOT_EFFECTS = new InjectionToken('@ngrx/effects Internal Root Effects');\nconst ROOT_EFFECTS = new InjectionToken('@ngrx/effects Root Effects');\nconst _FEATURE_EFFECTS = new InjectionToken('@ngrx/effects Internal Feature Effects');\nconst FEATURE_EFFECTS = new InjectionToken('@ngrx/effects Feature Effects');\nconst EFFECTS_ERROR_HANDLER = new InjectionToken('@ngrx/effects Effects Error Handler');\n\nclass EffectSources extends Subject {\n    constructor(errorHandler, effectsErrorHandler) {\n        super();\n        this.errorHandler = errorHandler;\n        this.effectsErrorHandler = effectsErrorHandler;\n    }\n    addEffects(effectSourceInstance) {\n        this.next(effectSourceInstance);\n    }\n    /**\n     * @internal\n     */\n    toActions() {\n        return this.pipe(groupBy(getSourceForInstance), mergeMap((source$) => {\n            return source$.pipe(groupBy(effectsInstance));\n        }), mergeMap((source$) => {\n            const effect$ = source$.pipe(exhaustMap((sourceInstance) => {\n                return resolveEffectSource(this.errorHandler, this.effectsErrorHandler)(sourceInstance);\n            }), map((output) => {\n                reportInvalidActions(output, this.errorHandler);\n                return output.notification;\n            }), filter((notification) => notification.kind === 'N' && notification.value != null), dematerialize());\n            // start the stream with an INIT action\n            // do this only for the first Effect instance\n            const init$ = source$.pipe(take(1), filter(isOnInitEffects), map((instance) => instance.ngrxOnInitEffects()));\n            return merge(effect$, init$);\n        }));\n    }\n}\nEffectSources.ɵfac = function EffectSources_Factory(t) { return new (t || EffectSources)(ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler), ɵngcc0.ɵɵinject(EFFECTS_ERROR_HANDLER)); };\nEffectSources.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: EffectSources, factory: EffectSources.ɵfac });\n/** @nocollapse */\nEffectSources.ctorParameters = () => [\n    { type: ErrorHandler },\n    { type: undefined, decorators: [{ type: Inject, args: [EFFECTS_ERROR_HANDLER,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectSources, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.ErrorHandler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [EFFECTS_ERROR_HANDLER]\n            }] }]; }, null); })();\nfunction effectsInstance(sourceInstance) {\n    if (isOnIdentifyEffects(sourceInstance)) {\n        return sourceInstance.ngrxOnIdentifyEffects();\n    }\n    return '';\n}\nfunction resolveEffectSource(errorHandler, effectsErrorHandler) {\n    return (sourceInstance) => {\n        const mergedEffects$ = mergeEffects(sourceInstance, errorHandler, effectsErrorHandler);\n        if (isOnRunEffects(sourceInstance)) {\n            return sourceInstance.ngrxOnRunEffects(mergedEffects$);\n        }\n        return mergedEffects$;\n    };\n}\n\nclass EffectsRunner {\n    constructor(effectSources, store) {\n        this.effectSources = effectSources;\n        this.store = store;\n        this.effectsSubscription = null;\n    }\n    start() {\n        if (!this.effectsSubscription) {\n            this.effectsSubscription = this.effectSources\n                .toActions()\n                .subscribe(this.store);\n        }\n    }\n    ngOnDestroy() {\n        if (this.effectsSubscription) {\n            this.effectsSubscription.unsubscribe();\n            this.effectsSubscription = null;\n        }\n    }\n}\nEffectsRunner.ɵfac = function EffectsRunner_Factory(t) { return new (t || EffectsRunner)(ɵngcc0.ɵɵinject(EffectSources), ɵngcc0.ɵɵinject(ɵngcc2.Store)); };\nEffectsRunner.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: EffectsRunner, factory: EffectsRunner.ɵfac });\n/** @nocollapse */\nEffectsRunner.ctorParameters = () => [\n    { type: EffectSources },\n    { type: Store }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectsRunner, [{\n        type: Injectable\n    }], function () { return [{ type: EffectSources }, { type: ɵngcc2.Store }]; }, null); })();\n\nconst ROOT_EFFECTS_INIT = '@ngrx/effects/init';\nconst rootEffectsInit = createAction(ROOT_EFFECTS_INIT);\nclass EffectsRootModule {\n    constructor(sources, runner, store, rootEffects, storeRootModule, storeFeatureModule, guard) {\n        this.sources = sources;\n        runner.start();\n        rootEffects.forEach((effectSourceInstance) => sources.addEffects(effectSourceInstance));\n        store.dispatch({ type: ROOT_EFFECTS_INIT });\n    }\n    addEffects(effectSourceInstance) {\n        this.sources.addEffects(effectSourceInstance);\n    }\n}\nEffectsRootModule.ɵfac = function EffectsRootModule_Factory(t) { return new (t || EffectsRootModule)(ɵngcc0.ɵɵinject(EffectSources), ɵngcc0.ɵɵinject(EffectsRunner), ɵngcc0.ɵɵinject(ɵngcc2.Store), ɵngcc0.ɵɵinject(ROOT_EFFECTS), ɵngcc0.ɵɵinject(ɵngcc2.StoreRootModule, 8), ɵngcc0.ɵɵinject(ɵngcc2.StoreFeatureModule, 8), ɵngcc0.ɵɵinject(_ROOT_EFFECTS_GUARD, 8)); };\nEffectsRootModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: EffectsRootModule });\nEffectsRootModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n/** @nocollapse */\nEffectsRootModule.ctorParameters = () => [\n    { type: EffectSources },\n    { type: EffectsRunner },\n    { type: Store },\n    { type: Array, decorators: [{ type: Inject, args: [ROOT_EFFECTS,] }] },\n    { type: StoreRootModule, decorators: [{ type: Optional }] },\n    { type: StoreFeatureModule, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [_ROOT_EFFECTS_GUARD,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectsRootModule, [{\n        type: NgModule,\n        args: [{}]\n    }], function () { return [{ type: EffectSources }, { type: EffectsRunner }, { type: ɵngcc2.Store }, { type: Array, decorators: [{\n                type: Inject,\n                args: [ROOT_EFFECTS]\n            }] }, { type: ɵngcc2.StoreRootModule, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.StoreFeatureModule, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [_ROOT_EFFECTS_GUARD]\n            }] }]; }, null); })();\n\nclass EffectsFeatureModule {\n    constructor(root, effectSourceGroups, storeRootModule, storeFeatureModule) {\n        effectSourceGroups.forEach((group) => group.forEach((effectSourceInstance) => root.addEffects(effectSourceInstance)));\n    }\n}\nEffectsFeatureModule.ɵfac = function EffectsFeatureModule_Factory(t) { return new (t || EffectsFeatureModule)(ɵngcc0.ɵɵinject(EffectsRootModule), ɵngcc0.ɵɵinject(FEATURE_EFFECTS), ɵngcc0.ɵɵinject(ɵngcc2.StoreRootModule, 8), ɵngcc0.ɵɵinject(ɵngcc2.StoreFeatureModule, 8)); };\nEffectsFeatureModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: EffectsFeatureModule });\nEffectsFeatureModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n/** @nocollapse */\nEffectsFeatureModule.ctorParameters = () => [\n    { type: EffectsRootModule },\n    { type: Array, decorators: [{ type: Inject, args: [FEATURE_EFFECTS,] }] },\n    { type: StoreRootModule, decorators: [{ type: Optional }] },\n    { type: StoreFeatureModule, decorators: [{ type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectsFeatureModule, [{\n        type: NgModule,\n        args: [{}]\n    }], function () { return [{ type: EffectsRootModule }, { type: Array, decorators: [{\n                type: Inject,\n                args: [FEATURE_EFFECTS]\n            }] }, { type: ɵngcc2.StoreRootModule, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.StoreFeatureModule, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n\nclass EffectsModule {\n    static forFeature(featureEffects = []) {\n        return {\n            ngModule: EffectsFeatureModule,\n            providers: [\n                featureEffects,\n                {\n                    provide: _FEATURE_EFFECTS,\n                    multi: true,\n                    useValue: featureEffects,\n                },\n                {\n                    provide: USER_PROVIDED_EFFECTS,\n                    multi: true,\n                    useValue: [],\n                },\n                {\n                    provide: FEATURE_EFFECTS,\n                    multi: true,\n                    useFactory: createEffects,\n                    deps: [Injector, _FEATURE_EFFECTS, USER_PROVIDED_EFFECTS],\n                },\n            ],\n        };\n    }\n    static forRoot(rootEffects = []) {\n        return {\n            ngModule: EffectsRootModule,\n            providers: [\n                {\n                    provide: EFFECTS_ERROR_HANDLER,\n                    useValue: defaultEffectsErrorHandler,\n                },\n                EffectsRunner,\n                EffectSources,\n                Actions,\n                rootEffects,\n                {\n                    provide: _ROOT_EFFECTS,\n                    useValue: [rootEffects],\n                },\n                {\n                    provide: _ROOT_EFFECTS_GUARD,\n                    useFactory: _provideForRootGuard,\n                    deps: [\n                        [EffectsRunner, new Optional(), new SkipSelf()],\n                        [_ROOT_EFFECTS, new Self()],\n                    ],\n                },\n                {\n                    provide: USER_PROVIDED_EFFECTS,\n                    multi: true,\n                    useValue: [],\n                },\n                {\n                    provide: ROOT_EFFECTS,\n                    useFactory: createEffects,\n                    deps: [Injector, _ROOT_EFFECTS, USER_PROVIDED_EFFECTS],\n                },\n            ],\n        };\n    }\n}\nEffectsModule.ɵfac = function EffectsModule_Factory(t) { return new (t || EffectsModule)(); };\nEffectsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: EffectsModule });\nEffectsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EffectsModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\nfunction createEffects(injector, effectGroups, userProvidedEffectGroups) {\n    const mergedEffects = [];\n    for (const effectGroup of effectGroups) {\n        mergedEffects.push(...effectGroup);\n    }\n    for (const userProvidedEffectGroup of userProvidedEffectGroups) {\n        mergedEffects.push(...userProvidedEffectGroup);\n    }\n    return createEffectInstances(injector, mergedEffects);\n}\nfunction createEffectInstances(injector, effects) {\n    return effects.map((effect) => injector.get(effect));\n}\nfunction _provideForRootGuard(runner, rootEffects) {\n    // check whether any effects are actually passed\n    const hasEffects = !(rootEffects.length === 1 && rootEffects[0].length === 0);\n    if (hasEffects && runner) {\n        throw new TypeError(`EffectsModule.forRoot() called twice. Feature modules should use EffectsModule.forFeature() instead.`);\n    }\n    return 'guarded';\n}\n\n/**\n * Wraps project fn with error handling making it safe to use in Effects.\n * Takes either a config with named properties that represent different possible\n * callbacks or project/error callbacks that are required.\n */\nfunction act(\n/** Allow to take either config object or project/error functions */\nconfigOrProject, errorFn) {\n    const { project, error, complete, operator, unsubscribe } = typeof configOrProject === 'function'\n        ? {\n            project: configOrProject,\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            error: errorFn,\n            operator: concatMap,\n            complete: undefined,\n            unsubscribe: undefined,\n        }\n        : Object.assign(Object.assign({}, configOrProject), { operator: configOrProject.operator || concatMap });\n    return (source) => defer(() => {\n        const subject = new Subject();\n        return merge(source.pipe(operator((input, index) => defer(() => {\n            let completed = false;\n            let errored = false;\n            let projectedCount = 0;\n            return project(input, index).pipe(materialize(), map((notification) => {\n                switch (notification.kind) {\n                    case 'E':\n                        errored = true;\n                        return new Notification('N', error(notification.error, input));\n                    case 'C':\n                        completed = true;\n                        return complete\n                            ? new Notification('N', complete(projectedCount, input))\n                            : undefined;\n                    default:\n                        ++projectedCount;\n                        return notification;\n                }\n            }), filter((n) => n != null), dematerialize(), finalize(() => {\n                if (!completed && !errored && unsubscribe) {\n                    subject.next(unsubscribe(projectedCount, input));\n                }\n            }));\n        }))), subject);\n    });\n}\n\n/**\n * `concatLatestFrom` combines the source value\n * and the last available value from a lazily evaluated Observable\n * in a new array\n */\nfunction concatLatestFrom(observablesFactory) {\n    return pipe(concatMap((value) => {\n        const observables = observablesFactory(value);\n        const observablesAsArray = Array.isArray(observables)\n            ? observables\n            : [observables];\n        return of(value).pipe(withLatestFrom(...observablesAsArray));\n    }));\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Actions, EFFECTS_ERROR_HANDLER, Effect, EffectSources, EffectsFeatureModule, EffectsModule, EffectsRootModule, EffectsRunner, ROOT_EFFECTS_INIT, USER_PROVIDED_EFFECTS, act, concatLatestFrom, createEffect, defaultEffectsErrorHandler, getEffectsMetadata, mergeEffects, ofType, rootEffectsInit, getSourceMetadata as ɵa, createEffects as ɵb, _provideForRootGuard as ɵc, _ROOT_EFFECTS_GUARD as ɵd, _ROOT_EFFECTS as ɵe, ROOT_EFFECTS as ɵf, _FEATURE_EFFECTS as ɵg, FEATURE_EFFECTS as ɵh };\n\n//# sourceMappingURL=ngrx-effects.js.map"]},"metadata":{},"sourceType":"module"}